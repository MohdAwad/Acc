@model Acc.ViewModels.AccountStatementSearchVM
@{
    ViewBag.Title = @Resources.Resource.AccountStatement;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
    <link href="~/Content/jquery-ui.css" rel="stylesheet" />
<style>
    .panel-body {
        font-family: Verdana, Geneva, Tahoma, sans-serif
    }

    .panel-footer {
        font-family: Verdana, Geneva, Tahoma, sans-serif
    }

    .panel-title {
        font-family: Verdana, Geneva, Tahoma, sans-serif
    }

    .dt-button {
        display: none !important;
    }

    #MemberShipTypeBody1 {
        font-family: Verdana, Geneva, Tahoma, sans-serif
    }
    table.dataTable th.dt-center {
        font-size: 8pt !important;
        font-family: Verdana, Geneva, Tahoma, sans-serif;
    }

    #BodyStyle {
        font-size: 8pt;
        font-weight: bold;
        font-family: Verdana, Geneva, Tahoma, sans-serif;
    }

    table.dataTable thead .sorting::after, table.dataTable thead .sorting_asc::after, table.dataTable thead .sorting_desc::after {
        display: none !important;
    }
</style>
<script>
    function GetSelectedAccount(data) {
        if (data.AccountNumber != null && data.AccountNumber != '') {
            document.getElementById("FromAccAccount").value = data.AccountNumber;
            document.getElementById("FromAccName").value = data.AccountName;
        }
        else {
            document.getElementById("FromAccAccount").value = '';
            document.getElementById("FromAccName").value = '';
        }

    }
    function GetSelectedCostCenter(data) {

        if (data.CostNumber != null && data.AccNo != '') {
            document.getElementById("CostCenterNumber").value = data.CostNumber;
            document.getElementById("CostCenterName").value = data.CostName;
        }
        else {
            document.getElementById("CostCenterNumber").value = '';
            document.getElementById("CostCenterName").value = '';
        }

    }
    var AccNumber = [];
    $.getJSON('@Url.Action("GetAcountAcc", "MultiUse")', { id: 0 }, function (Data) {
        AccNumber = [];
            for (var i = 0, len = Data.length; i < len; i++) {
                var r = { label: Data[i].AccountName, value: Data[i].AccountNumber, stop: Data[i].StoppedAccount };
                AccNumber.push(r);
            }
    });
    var CostNumber = [];
    $.getJSON('@Url.Action("GetCostCenter", "MultiUse")', { id: 0 }, function (Data) {
        CostNumber = [];
            for (var i = 0, len = Data.length; i < len; i++) {
                var r = { label: Data[i].CostName, value: Data[i].CostNumber, stop: Data[i].StoppedCost };
                CostNumber.push(r);
            }
    });
    $(function () {
        $("#FromAccAccount").autocomplete({
            source: AccNumber,
            select: function (event, ui) {
                document.getElementById("FromAccAccount").value = ui.item.value;
                document.getElementById("FromAccName").value = ui.item.label;
            }
        });
    });
    $(function () {
        $("#CostCenterNumber").autocomplete({
            source: CostNumber,
            select: function (event, ui) {
                document.getElementById("CostCenterNumber").value = ui.item.value;
                document.getElementById("CostCenterName").value = ui.item.label;
            }
        });
    });
</script>
<div class="panel card-view">
    <div class="panel-heading" style="background-color: #34495E">
        <div class="pull-left">
            <h6 class="panel-title txt-light" style="font-weight:bold">@Resources.Resource.AccountStatement</h6>
        </div>
        <div class="clearfix"></div>
    </div>
    <div class="panel-body">
        <div class="col-lg-12">
            <div class="form-group">
                <div class="col-lg-3">
                    @Html.Label(Resources.Resource.AccountNumber)
                    <div class="form-group input-group">
                        @Html.TextBoxFor(m => m.FromAccAccount, new { @id = "FromAccAccount", @class = "form-control input-sml" })
                        <span class="input-group-btn">
                            <button class="btn btn-default btn-icon-anim btn-square" type="button" id="BtnFromAccAccount">
                                <i class="fa fa-search"></i>
                            </button>
                        </span>
                    </div>
                </div>
                <div class="col-lg-4">
                    @Html.LabelFor(m => m.FromAccName)
                    <div class="form-group input-group">
                        @Html.TextBoxFor(m => m.FromAccName, new { @id = "FromAccName", @class = "form-control input-sml", @readonly = "readonly" })
                        <span class="input-group-btn">
                            <button class="btn btn-danger btn-icon-anim btn-square" type="button" id="BtnClearFromAccAccount">
                                <i class="fa fa-minus-square"></i>
                            </button>
                        </span>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group input-group">
                        @Html.LabelFor(m => m.FromDate)
                        @Html.TextBoxFor(model => model.FromDate, new { @id = "FromDate", @class = "form-control input-sml", @Value = Model.FromDate.ToString("dd/MM/yyyy") })
                        @Html.ValidationMessageFor(m => m.FromDate)
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        @Html.LabelFor(m => m.ToDate)
                        @Html.TextBoxFor(model => model.ToDate, new { @id = "ToDate", @class = "form-control input-sml", @Value = Model.ToDate.ToString("dd/MM/yyyy") })
                        @Html.ValidationMessageFor(m => m.ToDate)
                    </div>
                </div>
            </div>
        </div>
        @if (Model.WorkWithCostCenter)
        {
            <div class="col-lg-12">
                <div class="form-group">
                    <div class="col-lg-3">
                        @Html.CheckBoxFor(m => m.ByCostCenter, new { @id = "ByCostCenter", @class = "text-danger" })
                        @Html.Label(Resources.Resource.ByCostCenter, new { @class = "text-danger" })
                        <div class="form-group  input-group">
                            @Html.TextBoxFor(m => m.CostCenterNumber, new { @id = "CostCenterNumber", @class = "form-control input-sml" })
                            <span class="input-group-btn">
                                <button class="btn btn-default btn-icon-anim btn-square" type="button" id="BtnCostCenter">
                                    <i class="fa fa-search"></i>
                                </button>
                            </span>
                        </div>
                    </div>
                    <div class="col-lg-4">
                        @Html.LabelFor(m => m.CostCenterName)
                        <div class="form-group input-group">
                            @Html.TextBoxFor(m => m.CostCenterName, new { @id = "CostCenterName", @class = "form-control input-sml", @readonly = "readonly" })
                            <span class="input-group-btn">
                                <button class="btn btn-danger btn-icon-anim btn-square" type="button" id="BtnClearCostCenter">
                                    <i class="fa fa-minus-square"></i>
                                </button>
                            </span>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.CheckBoxFor(m => m.Partofthenumber, new { @id = "Partofthenumber", @class = "text-danger" })
                            @Html.LabelFor(m => m.Partofthenumber)
                            @Html.DropDownListFor(m => m.CostSearchType, new List<SelectListItem>
                                                             {
                                                              new SelectListItem{ Text=Resources.Resource.StartWith, Value = "1",Selected=false },
                                                              new SelectListItem{ Text=Resources.Resource.EndWith, Value = "2",Selected=false },
                                                              new SelectListItem{ Text=Resources.Resource.Contain, Value = "3",Selected=false }
                                                             }, new { @id = "CostSearchType", @class = "form-control input-sml" })
                            @Html.ValidationMessageFor(model => model.CostSearchType, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
            </div>
        }
        <div class="col-lg-12">
            <button type="submit" class="btn  btn-anim btnSearch" id="reload"><i class=" fa fa-search"></i><span class="btn-text">@Resources.Resource.Search</span></button>
            @if (User.IsInRole("PrintRepAccountStatement") || User.IsInRole("CoOwner"))
            {
                <button type="submit" class="btn btn-warning btn-anim" id="PrintPDFIndex"><i class=" fa fa-print"></i><span class="btn-text">@Resources.Resource.Print</span></button>
                <button type="submit" class="btn btn-anim btnEmail" id="SendEmail"><i class=" fa fa-mail-forward"></i><span class="btn-text">@Resources.Resource.SendMail</span></button>

            }
            <button type="submit" class="btn  btn-anim btnFav" id="SaveToFav"><i class=" fa fa-star"></i><span class="btn-text">@Resources.Resource.AddToFav</span></button>
            <button type="button" class="btn btn-default btn-anim" id="CloseForm"><i class="fa fa-times"></i><span class="btn-text">@Resources.Resource.Close</span></button>
        </div>
        <div class="col-lg-12" style="margin-top : 10px">
            <table id="tdataTableTransAction" class="table table-hover table-bordered mb-0" width="100%">
                <thead>
                    <tr>
                        <th>@Resources.Resource.Date</th>
                        <th>@Resources.Resource.Name</th>
                        <th>@Resources.Resource.Debit</th>
                        <th>@Resources.Resource.Credit</th>
                        <th>@Resources.Resource.Balance</th>
                        <th>@Resources.Resource.Statement</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
        <div class="col-lg-12">
            <div class="form-group">
                <div class="col-md-2" style="text-align: center">
                    <div class="form-group">
                        @Html.Label(@Resources.Resource.Debit)
                        @Html.TextBoxFor(m => m.sTotalDebit, new { @id = "TotalDebit", @class = "form-control input-sml", @min = "0", @style = "text-align: center;font-weight: bold", @readonly = "readonly" })
                    </div>
                </div>
                <div class="col-md-2" style="text-align: center">
                    <div class="form-group">
                        @Html.Label(@Resources.Resource.Credit)
                        @Html.TextBoxFor(m => m.sTotalCredit, new { @id = "TotalCredit", @class = "form-control input-sml", @min = "0", @style = "text-align: center;font-weight: bold", @readonly = "readonly" })
                    </div>
                </div>
                <div class="col-md-2" style="text-align: center">
                    <div class="form-group">
                        @Html.Label(@Resources.Resource.NetTotal)
                        @Html.TextBoxFor(m => m.sNetTotal, new { @id = "NetTotal", @class = "form-control input-sml", @min = "0", @style = "text-align: center;font-weight: bold", @readonly = "readonly" })
                    </div>
                </div>
                <div class="col-md-2" style="text-align: center">
                    <div class="form-group">
                        @Html.Label(@Resources.Resource.UnpaidChequesReceived)
                        @Html.TextBoxFor(m => m.sTotalCustomerCheque, new { @id = "TotalUnpaidChequesReceived", @class = "form-control input-sml", @min = "0", @style = "text-align: center;font-weight: bold", @readonly = "readonly" })
                    </div>
                </div>
                <div class="col-md-2" style="text-align: center">
                    <div class="form-group">
                        @Html.Label(@Resources.Resource.UnpaidChequesPayment)
                        @Html.TextBoxFor(m => m.sTotalSupplierCheque, new { @id = "TotalUnpaidChequesPayment", @class = "form-control input-sml", @min = "0", @style = "text-align: center;font-weight: bold", @readonly = "readonly" })
                    </div>
                </div>
                <div class="col-md-2" style="text-align: center">
                    <div class="form-group">
                        @Html.Label(@Resources.Resource.UnpaidBill)
                        @Html.TextBoxFor(m => m.sUnpaidBill, new { @id = "TotalUnpaidBill", @class = "form-control input-sml", @min = "0", @style = "text-align: center;font-weight: bold", @readonly = "readonly" })
                    </div>
                </div>
            </div>

        </div>
        <div class="col-lg-12">
            <div class="form-group">
                <div class="col-md-2" style="text-align: center">
                    <div class="form-group">
                    </div>
                </div>
                <div class="col-md-2" style="text-align: center">
                    <div class="form-group">
                    </div>
                </div>
                <div class="col-md-2" style="text-align: center">
                    <div class="form-group">
                    </div>
                </div>
                <div class="col-md-2" style="text-align: center">
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary btn-anim" id="ShowCustomerCheque"><i class=" fa fa-eye"></i><span class="btn-text">@Resources.Resource.ViewDetails</span></button>
                    </div>
                </div>
                <div class="col-md-2" style="text-align: center">
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary btn-anim" id="ShowSupplierCheque"><i class=" fa fa-eye"></i><span class="btn-text">@Resources.Resource.ViewDetails</span></button>
                    </div>
                </div>
                <div class="col-md-2" style="text-align: center">
                    <div class="form-group">
                    </div>
                </div>
            </div>

        </div>
    </div>
    <div class="panel-footer">

    </div>
</div>
@Html.CheckBoxFor(m => m.WorkWithCostCenter, new { @id = "WorkWithCostCenter", @style = "visibility : hidden;" })
<div id="modal-container" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-content">
    </div>
</div>

@section scripts{
    @Scripts.Render("~/bundles/jqueryval");
<script>
    $(document).ready(function () {
        var WorkWithCostCenter = document.getElementById("WorkWithCostCenter").checked;
        function validatedate(dateString) {
            var dateformat = /(((0|1)[0-9]|2[0-9]|3[0-1])\/(0[1-9]|1[0-2])\/((19|20)\d\d))$/;
            if (dateString.match(dateformat)) {
                var operator = dateString.split('/');
                var datepart = [];
                if (operator.length > 1) {
                    datepart = dateString.split('/');
                }
                var month = parseInt(datepart[1]);
                var day = parseInt(datepart[0]);
                var year = parseInt(datepart[2]);
                var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
                if (month == 1 || month > 2) {
                    if (day > ListofDays[month - 1]) {
                        return false;
                    }
                } else if (month == 2) {
                    var leapYear = false;
                    if ((year % 4 == 0) && ((!(year % 100 == 0)) || (year % 400 == 0))) {
                        leapYear = true;
                    }
                    if ((leapYear == false) && (day >= 29)) {
                        return false;
                    } else
                        if ((leapYear == true) && (day > 29)) {
                            return false;
                        }
                }
            }
            else {
                return false;
            }
            return true;
        }
        $(document).on('click', '#SendEmail', function () {
            bootbox.prompt({
                title: "@Resources.Resource.PleaseEnterEmail",
                inputType: 'email',
                className: 'rubberBand animated',
                buttons: {
                    confirm: {
                        label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Send</span>',
                        className: 'btn-success'
                    },
                    cancel: {
                        label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Close</span>',
                        className: 'btn-danger'
                    }
                },
                callback: function (result) {
                    if (result != null) {
                        var dialog = bootbox.dialog({
                            title: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.PleaseWait...</h6>',
                            message: '<p style="font-family: Verdana, Geneva, Tahoma, sans-serif"><i class="fa fa-spin fa-spinner"></i> @Resources.Resource.SendingMail...</p>',
                            closeButton: false
                        });
                        var CostCenterNumber = '';
                        var ByCostCenter = false;
                        var CostSearchType = "0";
                        var Partofthenumber = false;
                        if (WorkWithCostCenter) {
                            CostCenterNumber = $("#CostCenterNumber").val();
                            ByCostCenter = document.getElementById("ByCostCenter").checked;
                            CostSearchType = $("#CostSearchType").val();
                            Partofthenumber = document.getElementById("Partofthenumber").checked;
                        }
                        var dataToSave = {
                            FromAccAccount: $("#FromAccAccount").val(),
                            FromDate: $("#FromDate").val(),
                            ToDate: $("#ToDate").val(),
                            CostCenterNumber: CostCenterNumber,
                            ByCostCenter: ByCostCenter,
                            CostSearchType: CostSearchType,
                            Partofthenumber: Partofthenumber,
                            Email: result
                        };

                        $.ajax({
                            type: "POST",
                            url: "/PDFReport/AccountStatmentPDFSendJason",
                            data: JSON.stringify(dataToSave),
                            contentType: 'application/json',
                            success: function (data) {

                                dialog.modal('hide');
                                if (data.Code == 0) {
                                    toastr.error(data.Msg);
                                }
                                else if (data.Code == 1) {
                                    toastr.success(data.Msg);
                                }

                            },
                            error: function (data) {
                                dialog.modal('hide');
                                toastr.error(data);
                            }

                        });
                    }

                }
            });
        });
        $(document).on('click', '#SendMail3', function () {
            var FromAccAccount = $("#FromAccAccount").val();
            var FromDate = $("#FromDate").val();
            var ToDate = $("#ToDate").val();
            var CostCenterNumber = '';
            var ByCostCenter = 0;
            var CostSearchType = "0";
            var Partofthenumber = 0;
            if (WorkWithCostCenter) {
                CostCenterNumber = $("#CostCenterNumber").val();
                ByCostCenter = document.getElementById("ByCostCenter").checked;
                CostSearchType = $("#CostSearchType").val();
                Partofthenumber = document.getElementById("Partofthenumber").checked;
                if (ByCostCenter == true) {
                    ByCostCenter = 1;
                }
                else {
                    ByCostCenter = 0
                }
                if (CostSearchType == '' || CostSearchType == null) {
                    CostSearchType = "0";
                }
                if (CostCenterNumber == '' || CostCenterNumber == null) {
                    CostCenterNumber = "0";
                }
                if (Partofthenumber == true) {
                    Partofthenumber = 1
                }
                else {
                    Partofthenumber = 0
                }
            }
            else {
                CostCenterNumber = "0";
                CostSearchType = "0";
                ByCostCenter = false;
                Partofthenumber = false;
            }

            if (FromAccAccount == '' || FromAccAccount == null) {
                FromAccAccount = "0";
            }
            var words = FromDate.split('/');
            FromDate = words[0] + words[1] + words[2];
            words = ToDate.split('/');
            ToDate = words[0] + words[1] + words[2];

            window.open('/PDFReport/AccountStatmentPDF/' + FromAccAccount + "/" + FromDate + "/" + ToDate + "/" + CostCenterNumber + "/" + ByCostCenter + "/" + CostSearchType + "/" + Partofthenumber + "/1", '_blank');

        });
        $(document).on('click', '#SaveToFav', function () {

            bootbox.confirm({
                message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.AreYouSure</h6>',
                className: 'rubberBand animated',
                buttons: {
                    confirm: {
                        label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Yes</span>',
                        className: 'btn-success'
                    },
                    cancel: {
                        label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.No</span>',
                        className: 'btn-danger'
                    }
                },
                callback: function (result) {
                    if (result) {
                        var dialog = bootbox.dialog({
                            title: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.PleaseWait...</h6>',
                            message: '<p style="font-family: Verdana, Geneva, Tahoma, sans-serif"><i class="fa fa-spin fa-spinner"></i> @Resources.Resource.Saving...</p>',
                            closeButton: false
                        });

                        var dataToSave = {

                            ScreenName: '@Resources.Resource.AccountStatement',
                            ScreenUrl: "/Report/AccountStatement",
                            ScreenType: 1

                        };

                        $.ajax({
                            type: "POST",
                            url: "/FavScreen/AddToFave",
                            data: JSON.stringify(dataToSave),
                            contentType: 'application/json',
                            success: function (data) {

                                dialog.modal('hide');
                                if (data.Code == 0) {
                                    toastr.error(data.Msg);
                                }
                                else if (data.Code == 1) {
                                    toastr.success(data.Msg);
                                }

                            },
                            error: function (data) {
                                dialog.modal('hide');
                                toastr.error(data);
                            }

                        });
                    }
                }
            });


        });
        $(document).on('click', '#PrintPDFIndex', function () {
            var FromAccAccount = $("#FromAccAccount").val();
            var FromDate = $("#FromDate").val();
            var ToDate = $("#ToDate").val();
            var CostCenterNumber = '';
            var ByCostCenter = false;
            var CostSearchType = "0";
            var Partofthenumber = false;
            if (WorkWithCostCenter) {
                CostCenterNumber = $("#CostCenterNumber").val();
                ByCostCenter = document.getElementById("ByCostCenter").checked;
                CostSearchType = $("#CostSearchType").val();
                Partofthenumber = document.getElementById("Partofthenumber").checked;

                if (CostSearchType == '' || CostSearchType == null) {
                    CostSearchType = "0";
                }
                if (CostCenterNumber == '' || CostCenterNumber == null) {
                    CostCenterNumber = "0";
                }
            }
            else {
                CostCenterNumber = "0";
                CostSearchType = "0";
                ByCostCenter = false;
                Partofthenumber = false;
            }

            if (FromAccAccount == '' || FromAccAccount == null) {
                FromAccAccount = "0";
            }
            var words = FromDate.split('/');
            FromDate = words[0] + words[1] + words[2];
            words = ToDate.split('/');
            ToDate = words[0] + words[1] + words[2];

            window.open('/PDFReport/AccountStatmentPDF/' + FromAccAccount + "/" + FromDate + "/" + ToDate + "/" + CostCenterNumber + "/" + ByCostCenter + "/" + CostSearchType + "/" + Partofthenumber + "/0", '_blank');

        });
        $(document).on('click', '#CloseForm', function () {
            window.location = "/Report/ReportDash";
        });
        $("#FromDate").mask("99/99/9999");
        $("#ToDate").mask("99/99/9999");
        $("#FromAccAccount").focus().select();
        $("#FromAccAccount").keyup(function (event) {
            if (event.keyCode == 13) {
                $("#FromDate").focus().select();
            }
            else if (event.keyCode == 17) {
                var dialog = bootbox.dialog({
                    title: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.PleaseWait...</h6>',
                    message: '<p style="font-family: Verdana, Geneva, Tahoma, sans-serif"><i class="fa fa-spin fa-spinner"></i> @Resources.Resource.PreparingData...</p>',
                    closeButton: false
                });
                var url = '/MultiUse/SearchAcc/SearchFromAccountNumber';
                $.get(url, function (data) {
                    $('#modal-container').html(data);
                    $('#modal-container').modal('show');
                    dialog.modal('hide');
                })
            }
        });
        $("#FromDate").keyup(function (event) {
            if (event.keyCode == 13)
                $("#ToDate").focus().select();
        });
        $("#ToDate").keyup(function (event) {
            if (event.keyCode == 13)
                $("#CostCenterNumber").focus().select();
        });
        $("#CostCenterNumber").keyup(function (event) {
            if (event.keyCode == 13) {
                $("#FromAccAccount").focus().select();
            }
            else if (event.keyCode == 17) {
                var dialog = bootbox.dialog({
                    title: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.PleaseWait...</h6>',
                    message: '<p style="font-family: Verdana, Geneva, Tahoma, sans-serif"><i class="fa fa-spin fa-spinner"></i> @Resources.Resource.PreparingData...</p>',
                    closeButton: false
                });
                var url = '/MultiUse/SearchCostCenter/SearchFromCostCenter';
                $.get(url, function (data) {
                    $('#modal-container').html(data);
                    $('#modal-container').modal('show');
                    dialog.modal('hide');
                })
            }
        });
        $('#BtnFromAccAccount').on('click', function () {
            var dialog = bootbox.dialog({
                title: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.PleaseWait...</h6>',
                message: '<p style="font-family: Verdana, Geneva, Tahoma, sans-serif"><i class="fa fa-spin fa-spinner"></i> @Resources.Resource.PreparingData...</p>',
                closeButton: false
            });
            var url = '/MultiUse/SearchAcc/SearchFromAccountNumber';
            $.get(url, function (data) {
                $('#modal-container').html(data);
                $('#modal-container').modal('show');
                dialog.modal('hide');
            })
        });
        $(document).on('click', '#reload', function () {
            var dDate = document.getElementById("FromDate").value;
            var dToDate = document.getElementById("ToDate").value;
            if (!validatedate(dDate)) {
                bootbox.alert({
                    message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.InvalidDate</h6>',
                    className: 'rubberBand animated',
                    buttons: {
                        ok: {
                            label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Ok</span>',
                            className: 'btn-primary'
                        }
                    }
                });
            }
            else if (!validatedate(dToDate)) {
                bootbox.alert({
                    message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.InvalidDate</h6>',
                    className: 'rubberBand animated',
                    buttons: {
                        ok: {
                            label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Ok</span>',
                            className: 'btn-primary'
                        }
                    }
                });
            }
            else {
                var dialog = bootbox.dialog({
                    title: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.PleaseWait...</h6>',
                    message: '<p style="font-family: Verdana, Geneva, Tahoma, sans-serif"><i class="fa fa-spin fa-spinner"></i> @Resources.Resource.PreparingData...</p>',
                    closeButton: false
                });
                $('#tdataTableTransAction').DataTable().clear().draw();
                $('#tdataTableTransAction').DataTable().ajax.reload();
                dialog.modal('hide');
            }
        });
        var tdataTableTransActionRef = $("#tdataTableTransAction").DataTable({
            "language": {
                "emptyTable": '@Resources.Resource.EmptyTable',
                "search": '@Resources.Resource.Search',
                "loadingRecords": '@Resources.Resource.LoadingRecords',
                "processing": '@Resources.Resource.Processing',
                "zeroRecords": '@Resources.Resource.ZeroRecords',
                "info": '@Resources.Resource.Info',
                "infoEmpty": '@Resources.Resource.InfoEmpty',
                "lengthMenu": '@Resources.Resource.LengthMenu',
                "infoFiltered": '@Resources.Resource.InfoFiltered',
                "paginate": {
                    "previous": '@Resources.Resource.Previous',
                    "next": '@Resources.Resource.Next',
                    "first": '@Resources.Resource.First',
                    "last": '@Resources.Resource.Last',
                },
                "aria": {
                    "sortAscending": '@Resources.Resource.SortAscending',
                    "sortDescending": '@Resources.Resource.SortDescending'
                }
            },
            "scrollY": "500px",
            "scrollX": true,
            "ordering": false,
            "autoWidth": false,
            "paging": false,
            "searching": false,
            "columnDefs": [
                { "width": 70, "targets": 0, "className": "dt-center" },
                { "width": 130, "targets": 1, "className": "dt-center" },
                { "width": 70, "targets": 2, "className": "dt-center" },
                { "width": 70, "targets": 3, "className": "dt-center" },
                { "width": 100, "targets": 4, "className": "dt-center" },
                { "targets": 5, "className": "dt-center" }
            ],

            dom: 'Bfrtip',
            buttons: [

            ],

            ajax: {
                "type": "POST",
                url: "/Report/GetAccountTransAction",
                "data": function (d) {
                    d.FromAccAccount = $("#FromAccAccount").val();
                    d.FromDate = $("#FromDate").val();
                    d.ToDate = $("#ToDate").val();
                    d.CostCenterNumber = $("#CostCenterNumber").val();
                    d.ByCostCenter = $("#ByCostCenter:checked").val();
                    d.CostSearchType = $("#CostSearchType").val();
                    d.Partofthenumber = $("#Partofthenumber:checked").val();

                },
                "dataSrc": function (json) {
                    document.getElementById("TotalDebit").value = '0';
                    document.getElementById("TotalCredit").value = '0';
                    document.getElementById("NetTotal").value = '0';
                    document.getElementById("TotalUnpaidChequesReceived").value = '0';
                    document.getElementById("TotalUnpaidChequesPayment").value = '0';
                    document.getElementById("TotalUnpaidBill").value = '0';

                    document.getElementById("TotalDebit").value = json.sTotalDebit;
                    document.getElementById("TotalCredit").value = json.sTotalCredit;
                    document.getElementById("NetTotal").value = json.sNetTotal;
                    document.getElementById("TotalUnpaidChequesReceived").value = json.sTotalCustomerCheque;
                    document.getElementById("TotalUnpaidChequesPayment").value = json.sTotalSupplierCheque;
                    document.getElementById("TotalUnpaidBill").value = '0';

                    return json.AccountStatementVM;
                }
            },
            columns: [
                {
                    data: "TransDate",
                    render: function (data, type, r) {
                        if (r.TransName == "") {
                            return "";
                        }
                        else {
                            return moment(data).format('DD/MM/YYYY');
                        }

                    }
                },

                {
                    data: "VoucherNumber",
                    render: function (data, type, r) {
                        if (r.TransName == "") {
                            return "@Resources.Resource.PreviousBalance";
                        }
                        else {
                            return "<a  class='text-primary js-modify'   href='/TransAction/Detail/" + data + "/" + r.CompanyTransactionKindID + "/" + r.TransactionKindID + " '>" + r.TransName + "</a>";
                        }
                    }

                },
                {
                    data: "sDebit"
                },
                {
                    data: "sCredit"
                },


                {
                    data: "sBalance"
                },
                {
                    data: "Statment"
                }


            ]


        });
        $('#tdataTableTransAction').on('click', '.js-delete', function (e) {
            $('#modal-container').removeData('bs.modal');
            e.preventDefault();
            $(this).removeData('bs.modal');
            $(this).attr('data-target', '#modal-container');
            $(this).attr('data-toggle', 'modal');
        });
        $('#tdataTableTransAction').on('click', '.js-modify', function (e) {
            $('#modal-container').removeData('bs.modal');
            e.preventDefault();
            $(this).attr('data-target', '#modal-container');
            $(this).attr('data-toggle', 'modal');
        });
        $('#tdataTableTransAction').on('click', '.js-reason', function (e) {
            ;
            var d = e.target.getAttribute("data-content");
            bootbox.alert(d);

        });
        $('#js-addnew').on('click', function (e) {
            $('#modal-container').removeData('bs.modal');
            e.preventDefault();
            $(this).attr('data-target', '#modal-container');
            $(this).attr('data-toggle', 'modal');
        });
        $('#tdataTableTransAction').on('click', '.modal-close-btn', function () {
            $('#modal-container').modal('hide');
        });
        $('#modal-container').on('hidden.bs.modal', function () {
            $(this).removeData('bs.modal');
        });
        $('#CancelModal').on('click', function () {
            return false;
        });
        $('#BtnCostCenter').on('click', function () {
            var dialog = bootbox.dialog({
                title: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.PleaseWait...</h6>',
                message: '<p style="font-family: Verdana, Geneva, Tahoma, sans-serif"><i class="fa fa-spin fa-spinner"></i> @Resources.Resource.PreparingData...</p>',
                closeButton: false
            });
            var url = '/MultiUse/SearchCostCenter/SearchFromCostCenter';
            $.get(url, function (data) {
                $('#modal-container').html(data);
                $('#modal-container').modal('show');
                dialog.modal('hide');
            });
        });
        $('#BtnClearFromAccAccount').on('click', function () {
            document.getElementById("FromAccAccount").value = '';
            document.getElementById("FromAccName").value = '';
        });
        $('#BtnClearCostCenter').on('click', function () {
            document.getElementById("CostCenterNumber").value = '';
            document.getElementById("CostCenterName").value = '';
        });
        $('#ShowCustomerCheque').on('click', function () {
            var TotalUnpaidChequesReceived = parseFloat(document.getElementById("TotalUnpaidChequesReceived").value);
            if (TotalUnpaidChequesReceived > 0 || TotalUnpaidChequesReceived != '' || TotalUnpaidChequesReceived != null) {
                if ($("#FromAccAccount").val() == '') {
                    bootbox.alert({
                        message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.ThereAreNoCheques</h6>',
                        className: 'rubberBand animated',
                        buttons: {
                            ok: {
                                label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Ok</span>',
                                className: 'btn-primary'
                            }
                        }
                    });
                }
                else {
                    var FromAccAccount = $("#FromAccAccount").val();
                    var FromDate = $("#FromDate").val();
                    var ToDate = $("#ToDate").val();
                    var words = FromDate.split('/');
                    FromDate = words[0] + words[1] + words[2];
                    words = ToDate.split('/');
                    ToDate = words[0] + words[1] + words[2];
                    var dialog = bootbox.dialog({
                        title: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.PleaseWait...</h6>',
                        message: '<p style="font-family: Verdana, Geneva, Tahoma, sans-serif"><i class="fa fa-spin fa-spinner"></i> @Resources.Resource.PreparingData...</p>',
                        closeButton: false
                    });
                    var url = '/Report/ShowCustomerCheque/' + FromAccAccount + "/" + FromDate + "/" + ToDate;
                    $.get(url, function (data) {
                        $('#modal-container').html(data);
                        $('#modal-container').modal('show');
                        dialog.modal('hide');
                    });
                }
            }
            else {
                bootbox.alert({
                    message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.ThereAreNoCheques</h6>',
                    className: 'rubberBand animated',
                    buttons: {
                        ok: {
                            label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Ok</span>',
                            className: 'btn-primary'
                        }
                    }
                });
            }
        });
        $('#ShowSupplierCheque').on('click', function () {
            var TotalUnpaidChequesPayment = parseFloat(document.getElementById("TotalUnpaidChequesPayment").value);
            if (TotalUnpaidChequesPayment > 0 || TotalUnpaidChequesPayment != '' || TotalUnpaidChequesPayment != null) {
                if ($("#FromAccAccount").val() == '') {
                    bootbox.alert({
                        message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.ThereAreNoCheques</h6>',
                        className: 'rubberBand animated',
                        buttons: {
                            ok: {
                                label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Ok</span>',
                                className: 'btn-primary'
                            }
                        }
                    });
                }
                else {
                    var FromAccAccount = $("#FromAccAccount").val();
                    var FromDate = $("#FromDate").val();
                    var ToDate = $("#ToDate").val();
                    var words = FromDate.split('/');
                    FromDate = words[0] + words[1] + words[2];
                    words = ToDate.split('/');
                    ToDate = words[0] + words[1] + words[2];
                    var dialog = bootbox.dialog({
                        title: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.PleaseWait...</h6>',
                        message: '<p style="font-family: Verdana, Geneva, Tahoma, sans-serif"><i class="fa fa-spin fa-spinner"></i> @Resources.Resource.PreparingData...</p>',
                        closeButton: false
                    });
                    var url = '/Report/ShowSupplierCheque/' + FromAccAccount + "/" + FromDate + "/" + ToDate;
                    $.get(url, function (data) {
                        $('#modal-container').html(data);
                        $('#modal-container').modal('show');
                        dialog.modal('hide');
                    });

                }
            }
            else {
                bootbox.alert({
                    message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.ThereAreNoCheques</h6>',
                    className: 'rubberBand animated',
                    buttons: {
                        ok: {
                            label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Ok</span>',
                            className: 'btn-primary'
                        }
                    }
                });
            }
        });
        $("#FromDate").blur(function () {
            var dDate = document.getElementById("FromDate").value;
            if (!validatedate(dDate)) {
                bootbox.alert({
                    message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.InvalidDate</h6>',
                    className: 'rubberBand animated',
                    buttons: {
                        ok: {
                            label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Ok</span>',
                            className: 'btn-primary'
                        }
                    }
                });
                document.getElementById("FromDate").value = '01/01/' + new Date().getFullYear()
            }
        });
        $("#ToDate").blur(function () {
            var dDate = document.getElementById("ToDate").value;
            if (!validatedate(dDate)) {
                bootbox.alert({
                    message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.InvalidDate</h6>',
                    className: 'rubberBand animated',
                    buttons: {
                        ok: {
                            label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Ok</span>',
                            className: 'btn-primary'
                        }
                    }
                });
                document.getElementById("ToDate").value = '01/01/' + new Date().getFullYear()
            }
        });
        $("#FromAccAccount").blur(function () {
            var AccountNumber = document.getElementById("FromAccAccount").value;
            if (AccountNumber == '') {
                document.getElementById("FromAccName").value = '';
            }
            else {
                if (AccountNumber != null && AccountNumber != '') {
                    $.getJSON('@Url.Action("CheckAcountAcc", "MultiUse")', { id: AccountNumber }, function (Data) {
                        if (Data == "") {
                            bootbox.alert({
                                message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.TheAccountNumberDoesNotExist</h6>',
                                className: 'rubberBand animated',
                                buttons: {
                                    ok: {
                                        label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Ok</span>',
                                        className: 'btn-primary'
                                    }
                                }
                            });
                            document.getElementById("FromAccAccount").value = '';
                            document.getElementById("FromAccName").value = '';
                            $("#FromAccAccount").focus();
                        }
                        else {
                            document.getElementById("FromAccName").value = Data.AccountName;

                        }
                    });
                }
            }
        });
        $("#CostCenterNumber").blur(function () {
            var CostNumber = document.getElementById("CostCenterNumber").value;
            if (CostNumber == '') {
                document.getElementById("CostCenterName").value = '';
            }
            else {
                if (CostNumber != null && CostNumber != '') {
                    $.getJSON('@Url.Action("GetCostCenterInfo", "CostCenter")', { id: CostNumber }, function (Data) {
                        if (Data != "") {
                            if ('@Resources.Resource.CurLang' == 'Arb') {
                                document.getElementById("CostCenterName").value = Data.ArabicName;
                                }
                                else {
                                document.getElementById("CostCenterName").value = Data.EnglishName;
                                }
                        }
                        else {
                            document.getElementById("CostCenterName").value = "";
                        }
                    });
                }
            }
        });
    });

</script>

}



