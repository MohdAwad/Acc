
@model Acc.ViewModels.AccountLevelRepVM
@{
    ViewBag.Title = @Resources.Resource.Report3D;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
    <br />
<style>
    .panel-body {
        font-family: Verdana, Geneva, Tahoma, sans-serif
    }

    .panel-footer {
        font-family: Verdana, Geneva, Tahoma, sans-serif
    }

    .panel-title {
        font-family: Verdana, Geneva, Tahoma, sans-serif
    }

    .dt-button {
        display: none !important;
    }

    #MemberShipTypeBody1 {
        font-family: Verdana, Geneva, Tahoma, sans-serif
    }

    #GridView_DXHeadersRow0 {
        font-family: Verdana, Geneva, Tahoma, sans-serif !important;
        font-size: 10pt;
    }

    #PivotGrid_MTD {
        font-family: Verdana, Geneva, Tahoma, sans-serif !important;
        font-size: 10pt;
    }

    #PivotGrid_ACCFilterArea {
        font-family: Verdana, Geneva, Tahoma, sans-serif !important;
        font-size: 10pt;
    }

    #PivotGrid {
        width: 100% !important;
    }
    #PivotGrid_PT {
        font-family: Verdana, Geneva, Tahoma, sans-serif !important;
        font-size: 10pt;
    }
</style>

<script>
    $(document).on('click', '#reload', function () {
        PivotGrid.PerformCallback()


    });
    function OnBeginCallback(s, e) {
        e.customArgs['FromDate'] = $("#FromDate").val();
        e.customArgs['ToDate'] = $("#ToDate").val();
        e.customArgs['AccountLevelDropVMID'] = $('#AccountLevelID').val();
        e.customArgs['RepMonthType'] = $('#RepMonthType').val();

    }
    function ReFillData() {
        PivotGrid.PerformCallback()
    }
    function ExportPivotGrid(actionName) {
        var FromDate = document.getElementById("FromDate").innerHTML;
        document.getElementById("hFromDate").innerHTML = FromDate;
        var form = $('#PivotGridExportForm'),
            defaultAction = form.attr('action'),
            newAction = defaultAction.replace('ActionPlaceHolder', actionName);
        form.attr('action', newAction);
        form.submit();
        form.attr('action', defaultAction);
    }
</script>

@using (Html.BeginForm("ActionPlaceHolder", "Report", FormMethod.Post, new { id = "PivotGridExportForm" }))
{
    <div class="panel card-view">
        <div class="panel-heading" style="background-color: #34495E">
            <div class="pull-left">
                <h6 class="panel-title txt-light" style="font-weight:bold">@Resources.Resource.Report3D</h6>
            </div>
            <div class="clearfix"></div>
        </div>
        <div class="panel-body">
            <div class="col-lg-12">
                <div class="col-lg-3">
                    <div class="form-group">
                        @Html.LabelFor(m => m.AccountLevelDropVMID)<span style="color:red">*</span>

                        @Html.DropDownListFor(m => m.AccountLevelDropVMID, new SelectList(Model.AccountLevelDropVM, "AccountLevel", "LevelName"), Resources.Resource.Level, new { @id = "AccountLevelID", @class = "form-control input-sml" })
                    </div>
                </div>
                <div class="col-lg-2">
                    <div class="form-group">
                        @Html.LabelFor(m => m.FromDate)
                        @Html.TextBoxFor(model => model.FromDate, new { @id = "FromDate", @class = "form-control  input-sm", @Value = Model.ToDate.ToString("dd/MM/yyyy"), data_val = "false" })

                    </div>
                </div>
                <div class="col-lg-2">
                    <div class="form-group">
                        @Html.LabelFor(m => m.ToDate)
                        @Html.TextBoxFor(model => model.ToDate, new { @id = "ToDate", @class = "form-control  input-sm", @Value = Model.ToDate.ToString("dd/MM/yyyy"), data_val = "false" })

                    </div>
                </div>
                <div class="col-lg-2">
                    <div class="form-group">
                        @Html.LabelFor(m => m.RepMonthType)

                        @Html.DropDownListFor(m => m.RepMonthType, new List<SelectListItem>
                              {
                                 new SelectListItem{ Text=Resources.Resource.Monthly, Value = "0",Selected=true },
                                 new SelectListItem{ Text=Resources.Resource.Quarterly, Value = "1",Selected=false },
                                  new SelectListItem{ Text=Resources.Resource.Halfyearly, Value = "2",Selected=false }

                              }, new { @id = "RepMonthType", @class = "form-control  input-sm", @style = "width:100%;display:inline" })

                    </div>
                </div>
            </div>
            <div class="col-lg-12">
                @Html.DevExpress().Button(btn =>
                   {
                       btn.Name = "Search";
                       btn.Text = Resources.Resource.Search;
                       btn.UseSubmitBehavior = false;
                        btn.RenderMode = ButtonRenderMode.Outline;
                       btn.ClientVisible = false;

                       btn.ClientSideEvents.Click = "function() {ReFillData(); }";

                   }).GetHtml()
                <button type="button" class="btn  btn-anim btnSearch" id="reload"><i class=" fa fa-search"></i><span class="btn-text">@Resources.Resource.Search</span></button>
                @if (User.IsInRole("PrintRepPivotPrintReportAccounts") || User.IsInRole("CoOwner"))
                {
                    <button type="submit" class="btn btn-warning btn-anim" id="PrintPDF"><i class=" fa fa-print"></i><span class="btn-text">@Resources.Resource.Print</span></button>
                }
                <button type="button" class="btn btn-anim btnFav" id="AddToFav"><i class=" fa fa-star"></i><span class="btn-text">@Resources.Resource.AddToFav</span></button>
                <button type="button" class="btn btn-default btn-anim" id="CloseForm"><i class="fa fa-times"></i><span class="btn-text">@Resources.Resource.Close</span></button>
            </div>
            <div class="col-lg-12" style="margin-top : 10px">
                <div class="form-group">
                    <input type="hidden" id="hFromDate" value="01/01/2020">

                    @Html.Action("PivotAccountsGridPartial", Model)
                </div>
            </div>
        </div>
        <div class="panel-footer">

        </div>
    </div>
}
@section scripts{
    @Scripts.Render("~/bundles/jqueryval");
<script>
    $(document).ready(function () {


        function validatedate(dateString) {
            var dateformat = /(((0|1)[0-9]|2[0-9]|3[0-1])\/(0[1-9]|1[0-2])\/((19|20)\d\d))$/;
            if (dateString.match(dateformat)) {
                var operator = dateString.split('/');
                var datepart = [];
                if (operator.length > 1) {
                    datepart = dateString.split('/');
                }
                var month = parseInt(datepart[1]);
                var day = parseInt(datepart[0]);
                var year = parseInt(datepart[2]);
                var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
                if (month == 1 || month > 2) {
                    if (day > ListofDays[month - 1]) {
                        return false;
                    }
                } else if (month == 2) {
                    var leapYear = false;
                    if ((year % 4 == 0) && ((!(year % 100 == 0)) || (year % 400 == 0))) {
                        leapYear = true;
                    }
                    if ((leapYear == false) && (day >= 29)) {
                        return false;
                    } else
                        if ((leapYear == true) && (day > 29)) {
                            return false;
                        }
                }
            }
            else {
                return false;
            }
            return true;
        }
      $(document).on('click', '#AddToFav', function () {

				bootbox.confirm({
					message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.AreYouSure</h6>',
					className: 'rubberBand animated',
					buttons: {
						confirm: {
							label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Yes</span>',
							className: 'btn-success'
						},
						cancel: {
							label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.No</span>',
							className: 'btn-danger'
						}
					},
					callback: function (result) {
						if (result) {
							var dialog = bootbox.dialog({
								title: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.PleaseWait...</h6>',
								message: '<p style="font-family: Verdana, Geneva, Tahoma, sans-serif"><i class="fa fa-spin fa-spinner"></i> @Resources.Resource.Saving...</p>',
								closeButton: false
							});

							var dataToSave = {

								ScreenName: '@Resources.Resource.Report3D',
                                ScreenUrl: "/Report/PivotReportAccounts",
								ScreenType: 1

							};

							$.ajax({
								type: "POST",
								url: "/FavScreen/AddToFave",
								data: JSON.stringify(dataToSave),
								contentType: 'application/json',
								success: function (data) {

									dialog.modal('hide');
									if (data.Code == 0) {
										toastr.error(data.Msg);
									}
									else if (data.Code == 1) {
										toastr.success(data.Msg);
									}

								},
								error: function (data) {
									dialog.modal('hide');
									toastr.error(data);
								}

							});
						}
					}
				});


		});

        $(document).on('click', '#reload', function () {
                var dDate = document.getElementById("FromDate").value;
            var dToDate = document.getElementById("ToDate").value;
            if (!validatedate(dDate)) {
                bootbox.alert({
                    message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.InvalidDate</h6>',
                    className: 'rubberBand animated',
                    buttons: {
                        ok: {
                            label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Ok</span>',
                            className: 'btn-primary'
                        }
                    }
                });
            }
            else if (!validatedate(dToDate)) {
                bootbox.alert({
                    message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.InvalidDate</h6>',
                    className: 'rubberBand animated',
                    buttons: {
                        ok: {
                            label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Ok</span>',
                            className: 'btn-primary'
                        }
                    }
                });
            }
            else {
               document.getElementById("Search").click();

            }
        });

           
            $(document).on('click', '#CloseForm', function () {
                window.location = "/Report/ReportDash";
            });
        $("#FromDate").blur(function () {
            var dDate = document.getElementById("FromDate").value;
            if (!validatedate(dDate)) {
                bootbox.alert({
                    message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.InvalidDate</h6>',
                    className: 'rubberBand animated',
                    buttons: {
                        ok: {
                            label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Ok</span>',
                            className: 'btn-primary'
                        }
                    }
                });
                document.getElementById("FromDate").value = '01/01/' + new Date().getFullYear()
            }
        });
        $("#ToDate").blur(function () {
            var dDate = document.getElementById("ToDate").value;
            if (!validatedate(dDate)) {
                bootbox.alert({
                    message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.InvalidDate</h6>',
                    className: 'rubberBand animated',
                    buttons: {
                        ok: {
                            label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Ok</span>',
                            className: 'btn-primary'
                        }
                    }
                });
                document.getElementById("ToDate").value = '01/01/' + new Date().getFullYear()
            }
        });
            $("#FromDate").mask("99/99/9999");
            $("#ToDate").mask("99/99/9999");
            $("#FromDate").focus().select();
            $("#FromDate").keyup(function (event) {
                if (event.keyCode == 13) {
                    $("#ToDate").focus().select();
                }

            });
            $("#ToDate").keyup(function (event) {
                if (event.keyCode == 13) {
                    $("#FromDate").focus().select();
                }

            });
        });
</script>

}



