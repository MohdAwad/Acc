@model Acc.ViewModels.AssetVM
@{
    ViewBag.Title = @Resources.Resource.SaleAsset;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .panel-body {
        font-family: Verdana, Geneva, Tahoma, sans-serif
    }

    .panel-footer {
        font-family: Verdana, Geneva, Tahoma, sans-serif
    }

    .panel-title {
        font-family: Verdana, Geneva, Tahoma, sans-serif
    }
</style>
<script>
    function formatMoney(amount, decimalCount, decimal = ".", thousands = ",") {
        try {
            decimalCount = Math.abs(decimalCount);
            decimalCount = isNaN(decimalCount) ? decimalCount : decimalCount;

            const negativeSign = amount < 0 ? "-" : "";

            let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();
            let j = (i.length > 3) ? i.length % 3 : 0;

            return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : "");
        } catch (e) {
            console.log(e)
        }
    };
    var WorkWithCostCenter = document.getElementById("WorkWithCostCenter").checked;
    function GetAsset(data) {
        var TheDecimalPointForTheLocalCurrency = document.getElementById("TheDecimalPointForTheLocalCurrency").value;
        var TheDecimalPointForTheForeignCurrency = document.getElementById("TheDecimalPointForTheForeignCurrency").value;
        if (data.AssetID != null) {
            document.getElementById("AssetID").value = data.AssetID;
            document.getElementById("AssetName").value = data.AssetName;
            document.getElementById("BookValue").value = (formatMoney(data.BookValue, TheDecimalPointForTheLocalCurrency));

            document.getElementById("Note").value = data.Note;
            document.getElementById("CreditAccountNo").value = data.CreditAccountNo;
            document.getElementById("CreditAccountName").value = data.CreditAccountName;
            if (WorkWithCostCenter) {
                document.getElementById("CreditCostNo").value = data.CreditCostNo;
                document.getElementById("CreditCostName").value = data.CreditCostName;
            }
            document.getElementById("GuaranteedDate").value = moment(data.GuaranteedDate).format('DD/MM/YYYY');
            document.getElementById("LastConsumptionDate").value = moment(data.LastConsumptionDate).format('DD/MM/YYYY');
            document.getElementById("FAssetTypeID").value = data.FAssetTypeID;
        }
        else {
            document.getElementById("AssetID").value = '';
            document.getElementById("AssetName").value = '';
            document.getElementById("BookValue").value = '';
            document.getElementById("Note").value = '';
            document.getElementById("CreditAccountNo").value = '';
            document.getElementById("CreditAccountName").value = '';
            document.getElementById("CreditCostNo").value = '';
            document.getElementById("CreditCostName").value = '';
            document.getElementById("GuaranteedDate").value = '';
            document.getElementById("LastConsumptionDate").value = '';
            document.getElementById("FAssetTypeID").value = '';
        }

    }
      var AccNumber = [];
    $.getJSON('@Url.Action("GetAllAsset", "MultiUse")', { id: 0 }, function (Data) {
        AccNumber = [];
            for (var i = 0, len = Data.length; i < len; i++) {
                var r = { label: Data[i].AssetName, value: Data[i].AssetID, stop: Data[i].StoppedAccount };
                AccNumber.push(r);
            }
    });
    $(function () {
        $("#AssetID").autocomplete({
            source: AccNumber,
            select: function (event, ui) {
                document.getElementById("AssetID").value = ui.item.value;
                document.getElementById("AssetName").value = ui.item.label;
            }
        });
    });

</script>
<div style="padding-top:20px;">
    <div class="panel card-view">
        <div class="panel-heading" style="background-color: #34495E">
            <div class="pull-left">
                <h6 class="panel-title txt-light" style="font-weight:bold">@Resources.Resource.SaleAsset</h6>
            </div>
            <div class="clearfix"></div>
        </div>
        <div class="panel-body">
            <div class="col-lg-12">
                <div class="col-lg-3">
                    <div class="form-group">
                        @Html.Label(Resources.Resource.AssetID)<i class="text-danger">*</i>
                        <div class="form-group  input-group">
                            @Html.TextBoxFor(m => m.AssetID, new { @id = "AssetID", @class = "form-control input-sml" })
                            <span class="input-group-btn">
                                <button class="btn btn-default btn-icon-anim btn-square" type="button" id="BtnGetAsset">
                                    <i class="fa fa-search"></i>
                                </button>
                            </span>
                            @Html.ValidationMessageFor(m => m.AssetID)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.AssetName)
                        <div class="form-group input-group">
                            @Html.TextBoxFor(m => m.AssetName, new { @id = "AssetName", @class = "form-control input-sml", @readonly = "readonly" })
                            <span class="input-group-btn">
                                <button class="btn btn-danger btn-icon-anim btn-square" type="button" id="BtnClearGetAsset">
                                    <i class="fa fa-minus-square"></i>
                                </button>
                            </span>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.FAssetTypeID)

                        @Html.DropDownListFor(m => m.FAssetTypeID, new SelectList(Model.AssetType, "AssetTypeID", "Name"), Resources.Resource.AssetType, new { @id = "FAssetTypeID", @class = "form-control input-sml", @disabled = "disabled" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Note)
                        @Html.TextBoxFor(m => m.Note, new { @id = "Note", @class = "form-control input-sml", @readonly = "readonly" })
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="form-group">
                        @Html.Label(Resources.Resource.ConsumptionComplexNo)
                        @Html.TextBoxFor(m => m.CreditAccountNo, new { @id = "CreditAccountNo", @class = "form-control input-sml", @readonly = "readonly" })
                        @Html.ValidationMessageFor(m => m.CreditAccountNo)
                    </div>
                    <div class="form-group">
                        @Html.Label(Resources.Resource.ConsumptionComplexName)
                        @Html.TextBoxFor(m => m.CreditAccountName, new { @id = "CreditAccountName", @class = "form-control input-sml", @readonly = "readonly" })
                    </div>
                    @if (Model.WorkWithCostCenter)
                    {
                        <div class="form-group">
                            @Html.Label(Resources.Resource.ConsumptionComplexCostNo)
                            @Html.TextBoxFor(m => m.CreditCostNo, new { @id = "CreditCostNo", @class = "form-control input-sml", @readonly = "readonly" })
                            @Html.ValidationMessageFor(m => m.CreditCostNo)
                        </div>
                        <div class="form-group">
                            @Html.Label(Resources.Resource.ConsumptionComplexCostName)
                            @Html.TextBoxFor(m => m.CreditCostName, new { @id = "CreditCostName", @class = "form-control input-sml", @readonly = "readonly" })
                        </div>
                    }
                </div>
                <div class="col-lg-3">
                    <div class="form-group">
                        @Html.LabelFor(m => m.GuaranteedDate)
                        @Html.TextBoxFor(model => model.GuaranteedDate, new { @id = "GuaranteedDate", @class = "form-control input-sml", @Value = Model.GuaranteedDate.ToString("dd/MM/yyyy"), @readonly = "readonly" })
                        @Html.ValidationMessageFor(m => m.GuaranteedDate)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.BookValue)
                        @Html.TextBoxFor(m => m.BookValue, new { @id = "BookValue", @class = "form-control input-sml", @readonly = "readonly" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.LastConsumptionDate)
                        @Html.TextBoxFor(model => model.LastConsumptionDate, new { @id = "LastConsumptionDate", @class = "form-control input-sml", @Value = Model.LastConsumptionDate.ToString("dd/MM/yyyy"), @readonly = "readonly" })
                        @Html.ValidationMessageFor(m => m.LastConsumptionDate)
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="form-group">
                        @Html.LabelFor(m => m.SaleDate)
                        @Html.TextBoxFor(model => model.SaleDate, new { @id = "SaleDate", @class = "form-control input-sml", @Value = Model.SaleDate.ToString("dd/MM/yyyy") })
                        @Html.ValidationMessageFor(m => m.SaleDate)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.SaleValue)
                        @Html.TextBoxFor(m => m.SaleValue, new { @id = "SaleValue", @class = "form-control input-sml", @type = "number", @min = "0" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.SaleNote)
                        @Html.TextBoxFor(m => m.SaleNote, new { @id = "SaleNote", @class = "form-control input-sml" })
                    </div>

                </div>
            </div>
        </div>
        <div class="panel-footer">
            <div class="form-group">
                @if (User.IsInRole("AddShowSaleAsset") || User.IsInRole("CoOwner"))
                {
                    <button type="submit" class="btn btn-primary btn-anim" id="save"><i class="fa fa-save"></i><span class="btn-text">@Resources.Resource.Save</span> </button>
                }


                <button type="submit" class="btn btn-warning btn-anim" id="Clear"> <i class="fa fa-circle-o"></i><span class="btn-text">@Resources.Resource.Clear</span></button>
                <button type="submit" class="btn btn-anim btnFav" id="SaveToFav"><i class=" fa fa-star"></i><span class="btn-text">@Resources.Resource.AddToFav</span></button>
                <button type="button" class="btn btn-default btn-anim" id="Close"><i class="fa fa-times"></i><span class="btn-text">@Resources.Resource.Close</span></button>
            </div>
        </div>
    </div>
</div>
@Html.HiddenFor(m => m.CompanyID, new { @id = "CompanyID" })
@Html.CheckBoxFor(m => m.WorkWithCostCenter, new { @id = "WorkWithCostCenter", @style = "visibility : hidden;" })
@Html.TextBoxFor(m => m.TheDecimalPointForTheLocalCurrency, new { @id = "TheDecimalPointForTheLocalCurrency", @style = "visibility : hidden;" })
@Html.TextBoxFor(m => m.TheDecimalPointForTheForeignCurrency, new { @id = "TheDecimalPointForTheForeignCurrency", @style = "visibility : hidden;" })
<div id="modal-container" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-content">
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script>
    $(document).ready(function () {
        function validatedate(dateString) {
            var dateformat = /(((0|1)[0-9]|2[0-9]|3[0-1])\/(0[1-9]|1[0-2])\/((19|20)\d\d))$/;
            if (dateString.match(dateformat)) {
                var operator = dateString.split('/');
                var datepart = [];
                if (operator.length > 1) {
                    datepart = dateString.split('/');
                }
                var month = parseInt(datepart[1]);
                var day = parseInt(datepart[0]);
                var year = parseInt(datepart[2]);
                var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
                if (month == 1 || month > 2) {
                    if (day > ListofDays[month - 1]) {
                        return false;
                    }
                } else if (month == 2) {
                    var leapYear = false;
                    if ((year % 4 == 0) && ((!(year % 100 == 0)) || (year % 400 == 0))) {
                        leapYear = true;
                    }
                    if ((leapYear == false) && (day >= 29)) {
                        return false;
                    } else
                        if ((leapYear == true) && (day > 29)) {
                            return false;
                        }
                }
            }
            else {
                return false;
            }
            return true;
        }
        $(document).on('click', '#SaveToFav', function () {

            bootbox.confirm({
                message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.AreYouSure</h6>',
                className: 'rubberBand animated',
                buttons: {
                    confirm: {
                        label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Yes</span>',
                        className: 'btn-success'
                    },
                    cancel: {
                        label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.No</span>',
                        className: 'btn-danger'
                    }
                },
                callback: function (result) {
                    if (result) {
                        var dialog = bootbox.dialog({
                            title: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.PleaseWait...</h6>',
                            message: '<p style="font-family: Verdana, Geneva, Tahoma, sans-serif"><i class="fa fa-spin fa-spinner"></i> @Resources.Resource.Saving...</p>',
                            closeButton: false
                        });

                        var dataToSave = {

                            ScreenName: '@Resources.Resource.SaleAsset',
                            ScreenUrl: "/Asset/SaleAsset",

                            ScreenType: 0

                        };

                        $.ajax({
                            type: "POST",
                            url: "/FavScreen/AddToFave",
                            data: JSON.stringify(dataToSave),
                            contentType: 'application/json',
                            success: function (data) {

                                dialog.modal('hide');
                                if (data.Code == 0) {
                                    toastr.error(data.Msg);
                                }
                                else if (data.Code == 1) {
                                    toastr.success(data.Msg);
                                }

                            },
                            error: function (data) {
                                dialog.modal('hide');
                                toastr.error(data);
                            }

                        });
                    }
                }
            });
        });
        $(document).on('click', '#Close', function () {
            window.location = "/AssetType/AssetDash";
        });
        $("#SaleDate").mask("99/99/9999");
        function Clear() {
            var today = new Date();
            var dd = today.getDate();
            var mm = today.getMonth() + 1;
            var yyyy = today.getFullYear();
            if (dd < 10) {
                dd = '0' + dd;
            }
            if (mm < 10) {
                mm = '0' + mm;
            }
            var today = dd + '/' + mm + '/' + yyyy;
            document.getElementById("SaleDate").value = today;
            document.getElementById("GuaranteedDate").value = today;
            document.getElementById("LastConsumptionDate").value = today;
            document.getElementById("SaleValue").value = '';
            document.getElementById("SaleNote").value = '';
            document.getElementById("AssetID").value = '';
            document.getElementById("AssetName").value = '';
            document.getElementById("BookValue").value = '';
            document.getElementById("Note").value = '';
            document.getElementById("CreditAccountNo").value = '';
            document.getElementById("CreditAccountName").value = '';
            document.getElementById("CreditCostNo").value = '';
            document.getElementById("CreditCostName").value = '';
        }
        $(document).on('click', '#Clear', function () {
            Clear();
        });
        $(document).on('click', '#save', function () {
            var dDate = document.getElementById("SaleDate").value;
            if (!validatedate(dDate) && dDate != null && dDate != '') {
                bootbox.alert({
                    message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.InvalidDate</h6>',
                    className: 'rubberBand animated',
                    buttons: {
                        ok: {
                            label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Ok</span>',
                            className: 'btn-primary'
                        }
                    }
                });
            }
            else if ($("#AssetID").val() == 0) {
                bootbox.alert({
                    message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.PleasefillalRequiredfields</h6>',
                    className: 'rubberBand animated',
                    buttons: {
                        ok: {
                            label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Ok</span>',
                            className: 'btn-primary'
                        }
                    }
                });
            }
            else if ($("#AssetID").val() == '') {
                bootbox.alert({
                    message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.PleasefillalRequiredfields</h6>',
                    className: 'rubberBand animated',
                    buttons: {
                        ok: {
                            label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Ok</span>',
                            className: 'btn-primary'
                        }
                    }
                });

            }
            else if ($("#AssetName").val() == '') {
                bootbox.alert({
                    message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.PleasefillalRequiredfields</h6>',
                    className: 'rubberBand animated',
                    buttons: {
                        ok: {
                            label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Ok</span>',
                            className: 'btn-primary'
                        }
                    }
                });

            }
            else {
                bootbox.confirm({
                    message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.AreYouSure</h6>',
                    className: 'rubberBand animated',
                    buttons: {
                        confirm: {
                            label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Yes</span>',
                            className: 'btn-success'
                        },
                        cancel: {
                            label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.No</span>',
                            className: 'btn-danger'
                        }
                    },
                    callback: function (result) {
                        if (result) {
                            var dialog = bootbox.dialog({
                                title: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.PleaseWait...</h6>',
                                message: '<p style="font-family: Verdana, Geneva, Tahoma, sans-serif"><i class="fa fa-spin fa-spinner"></i> @Resources.Resource.Saving...</p>',
                                closeButton: false
                            });
                            var dataToSave = {
                                AssetID: $("#AssetID").val(),
                                AssetName: $("#AssetName").val(),
                                BookValue: $("#BookValue").val(), SaleDate: $("#SaleDate").val(),
                                SaleValue: $("#SaleValue").val(), SaleNote: $("#SaleNote").val()

                            };
                            $.ajax({
                                type: "POST",
                                url: "/Asset/SaleAsset",
                                data: JSON.stringify(dataToSave),
                                contentType: 'application/json',
                                success: function (data) {

                                    dialog.modal('hide');
                                    if (data.Code == 0) {
                                        toastr.error(data.Msg);
                                    }
                                    else if (data.Code == 1) {
                                        $('#modal-container').modal('hide');
                                        toastr.success(data.Msg);

                                        Clear();
                                    }

                                },
                                error: function (data) {
                                    dialog.modal('hide');
                                    toastr.error(data);
                                }

                            });
                        }
                    }
                });
            }

        });
        $('#BtnGetAsset').on('click', function () {
            var dialog = bootbox.dialog({
                title: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.PleaseWait...</h6>',
                message: '<p style="font-family: Verdana, Geneva, Tahoma, sans-serif"><i class="fa fa-spin fa-spinner"></i> @Resources.Resource.PreparingData...</p>',
                closeButton: false
            });
            var url = '/MultiUse/SearchAsset/GetAsset';
            $.get(url, function (data) {
                $('#modal-container').html(data);
                $('#modal-container').modal('show');
                dialog.modal('hide');
            })
        });
        $("#AssetID").focus().select();
        $("#SaleDate").keyup(function (event) {
            if (event.keyCode == 13)
                $("#SaleValue").focus().select();
        });
        $("#SaleValue").keyup(function (event) {
            if (event.keyCode == 13)
                $("#SaleNote").focus().select();
        });
        $("#SaleNote").keyup(function (event) {
            if (event.keyCode == 13)
                $("#SaleDate").focus().select();
        });
        $('#BtnClearGetAsset').on('click', function () {
            var today = new Date();
            var dd = today.getDate();
            var mm = today.getMonth() + 1;
            var yyyy = today.getFullYear();
            if (dd < 10) {
                dd = '0' + dd;
            }
            if (mm < 10) {
                mm = '0' + mm;
            }
            var today = dd + '/' + mm + '/' + yyyy;
            document.getElementById("GuaranteedDate").value = today;
            document.getElementById("LastConsumptionDate").value = today;
            document.getElementById("AssetID").value = '';
            document.getElementById("AssetName").value = '';
            document.getElementById("BookValue").value = '';
            document.getElementById("Note").value = '';
            document.getElementById("CreditAccountNo").value = '';
            document.getElementById("CreditAccountName").value = '';
            document.getElementById("CreditCostNo").value = '';
            document.getElementById("CreditCostName").value = '';
        });
        $("#SaleDate").blur(function () {
            var dDate = document.getElementById("SaleDate").value;
            if (!validatedate(dDate)) {
                bootbox.alert({
                    message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.InvalidDate</h6>',
                    className: 'rubberBand animated',
                    buttons: {
                        ok: {
                            label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Ok</span>',
                            className: 'btn-primary'
                        }
                    }
                });
                document.getElementById("SaleDate").value = '01/01/' + new Date().getFullYear()
            }
        });
        $("#AssetID").keyup(function (event) {
            if (event.keyCode == 13) {
                $("#SaleDate").focus().select();
            }
            else if (event.keyCode == 17) {
                var dialog = bootbox.dialog({
                    title: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.PleaseWait...</h6>',
                    message: '<p style="font-family: Verdana, Geneva, Tahoma, sans-serif"><i class="fa fa-spin fa-spinner"></i> @Resources.Resource.PreparingData...</p>',
                    closeButton: false
                });
                var url = '/MultiUse/SearchAsset/GetAsset';
                $.get(url, function (data) {
                    $('#modal-container').html(data);
                    $('#modal-container').modal('show');
                    dialog.modal('hide');
                })
            }
        });
        $("#AssetID").blur(function () {
            var AccountNumber = document.getElementById("AssetID").value;
            if (AccountNumber == '') {
                document.getElementById("AssetName").value = '';
            }
            else {
                if (AccountNumber != null && AccountNumber != '') {
                    $.getJSON('@Url.Action("CheckAllAsset", "MultiUse")', { id: AccountNumber }, function (Data) {
                        if (Data == "") {
                            bootbox.alert({
                                message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.TheAccountNumberDoesNotExist</h6>',
                                className: 'rubberBand animated',
                                buttons: {
                                    ok: {
                                        label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Ok</span>',
                                        className: 'btn-primary'
                                    }
                                }
                            });
                            document.getElementById("AssetID").value = '';
                            document.getElementById("AssetName").value = '';
                            $("#AssetID").focus();
                            document.getElementById("AssetTypeName").value = ' ';

                        }
                        else {
                            document.getElementById("AssetName").value = Data.AssetName;
                            document.getElementById("AssetTypeName").value = Data.AssetTypeName;

                        }
                    });
                }
            }
        });
    });
</script>
}




