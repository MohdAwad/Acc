@model Acc.ViewModels.PaperFilterVM
@{
    ViewBag.Title = @Resources.Resource.UnpaidChequesPayment;
}
<style>
    .modal-body {
        font-family: Verdana, Geneva, Tahoma, sans-serif;
        font-size: 8Pt
    }

    .modal-footer {
        font-family: Verdana, Geneva, Tahoma, sans-serif
    }

    .modal-title {
        font-family: Verdana, Geneva, Tahoma, sans-serif
    }

    .modal-dialog {
        width: 90%
    }
</style>
<script>
    $(document).ready(function () {
        var TheDecimalPointForTheLocalCurrency = document.getElementById("TheDecimalPointForTheLocalCurrency").value;
        var TheDecimalPointForTheForeignCurrency = document.getElementById("TheDecimalPointForTheForeignCurrency").value;
        function formatMoney(amount, decimalCount, decimal = ".", thousands = ",") {
            try {
                decimalCount = Math.abs(decimalCount);
                decimalCount = isNaN(decimalCount) ? decimalCount : decimalCount;

                const negativeSign = amount < 0 ? "-" : "";

                let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();
                let j = (i.length > 3) ? i.length % 3 : 0;

                return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : "");
            } catch (e) {
                console.log(e)
            }
        };
        var FromAccAccount = @Model.FromAccAccount;
        var FromDate = document.getElementById("FromDate").value;
        var ToDate = document.getElementById("ToDate").value;
        var words = FromDate.split('/');
        FromDate = words[0] + words[1] + words[2];
        words = ToDate.split('/');
        ToDate = words[0] + words[1] + words[2];
        var tabelMemRef = $("#tdataTableDetail").DataTable({
            "language": {
                "emptyTable": '@Resources.Resource.EmptyTable',
                "search": '@Resources.Resource.Search',
                "loadingRecords": '@Resources.Resource.LoadingRecords',
                "processing": '@Resources.Resource.Processing',
                "zeroRecords": '@Resources.Resource.ZeroRecords',
                "info": '@Resources.Resource.Info',
                "infoEmpty": '@Resources.Resource.InfoEmpty',
                "lengthMenu": '@Resources.Resource.LengthMenu',
                "infoFiltered": '@Resources.Resource.InfoFiltered',
                "paginate": {
                    "previous": '@Resources.Resource.Previous',
                    "next": '@Resources.Resource.Next',
                    "first": '@Resources.Resource.First',
                    "last": '@Resources.Resource.Last',
                },
                "aria": {
                    "sortAscending": '@Resources.Resource.SortAscending',
                    "sortDescending": '@Resources.Resource.SortDescending'
                }
            },
            "scrollY": "250px",
            "scrollX": true,
            "ordering": false,
            "autoWidth": false,
            "paging": false,
            "searching": false,
            "columnDefs": [
                {
                    "targets": [0],
                    "className": "dt-center"
                },
                {
                    "targets": [1],
                    "className": "dt-center"
                },
                {
                    "targets": [2],
                    "className": "dt-center"
                },
                {
                    "targets": [3],
                    "className": "dt-center"
                },
                {
                    "targets": [4],
                    "className": "dt-center"
                },
                {
                    "targets": [5],
                    "className": "dt-center"
                },
                {
                    "targets": [6],
                    "className": "dt-center"
                },
                {
                    "targets": [7],
                    "className": "dt-center"
                },
                {
                    "targets": [8],
                    "className": "dt-center"
                }
            ],
            dom: 'Bfrtip',
            buttons: [
            ],
            ajax: {
                "type": "GET",
                url: '/Report/GetShowSupplierCheque/' + FromAccAccount + "/" + FromDate + "/" + ToDate,

                dataSrc: ""
            },
            "footerCallback": function (row, data, start, end, display) {
                var api = this.api(), data;
                var intVal = function (i) {
                    return typeof i === 'string' ?
                        i.replace(/[\$,]/g, '') * 1 :
                        typeof i === 'number' ?
                            i : 0;
                };
                total = api.column(2).data().reduce(function (a, b) {
                    return intVal(a) + intVal(b);
                }, 0);
                var table = $('#tdataTableDetail').DataTable();
                document.getElementById("PaperCount").value = table.rows().count();
                document.getElementById("PaperAmount").value = formatMoney(total, TheDecimalPointForTheLocalCurrency);
            },
            columns: [
                {
                    data: "ChequeNumber"
                },
                {
                    data: "ChequeDate",
                    render: function (data, type, r) {
                        return moment(data).format('DD/MM/YYYY')
                    }

                },
                {
                    data: "ChequeAmount",
                    render: function (data, type, r) {
                        return (formatMoney(data, TheDecimalPointForTheLocalCurrency))
                    }
                },
                {
                    data: "PaidToAccount"
                },
                {
                    data: "PostdatedChequeName"
                },
                {
                    data: "BankName"
                },
                {
                    data: "DrawerName"

                },
                {

                    data: "VoucherNumber"
                },
                {
                    data: "VoucherDate",
                    render: function (data, type, r) {
                        return moment(data).format('DD/MM/YYYY')
                    }
                }

            ]
        });
        $(document).on('click', '#PrintPDFSupplier', function () {

            window.open('/PDFReport/GetShowSupplierChequePDF/' + FromAccAccount + "/" + FromDate + "/" + ToDate, '_blank');
        });
    });
</script>
<div id="myModal" class="modal fade in" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="display: block;">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header" style="background-color: #34495E">
                <div class="pull-left">
                    <h6 class="modal-title txt-light" style="font-weight:bold">
                        @Resources.Resource.UnpaidChequesPayment
                    </h6>
                </div>
                <div class="clearfix"></div>
            </div>
            <div class="modal-body">
                <div class="col-lg-12">
                    <table id="tdataTableDetail" class="table table-hover table-bordered mb-0" width="100%">
                        <thead>
                            <tr>
                                <th>@Resources.Resource.ChequeNumber</th>
                                <th>@Resources.Resource.ChequeDate</th>
                                <th>@Resources.Resource.ChequeAmount</th>
                                <th>@Resources.Resource.PaidToAccount</th>
                                <th>@Resources.Resource.PostdatedCheque</th>
                                <th>@Resources.Resource.BankAccountNumber</th>
                                <th>@Resources.Resource.NameOfThePayee</th>
                                <th>@Resources.Resource.ReceiptVoucherNumber</th>
                                <th>@Resources.Resource.ReceiptVoucherDate</th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
                <div class="col-lg-12">
                    <div class="form-group">
                        <div class="col-md-2">
                        </div>
                        <div class="col-md-2">
                        </div>
                        <div class="col-md-2" style="text-align: center">
                            <div class="form-group">
                                @Html.Label(@Resources.Resource.PaperCount)
                                @Html.TextBoxFor(m => m.PaperCount, new { @id = "PaperCount", @class = "form-control input-sml", @type = "number", @min = "0", @style = "text-align: center;font-weight: bold", @readonly = "readonly" })
                            </div>
                        </div>
                        <div class="col-md-2" style="text-align: center">
                            <div class="form-group">
                                @Html.Label(@Resources.Resource.PaperAmount)
                                @Html.TextBoxFor(m => m.PaperAmount, new { @id = "PaperAmount", @class = "form-control input-sml", @style = "text-align: center;font-weight: bold;", @readonly = "readonly" })
                            </div>
                        </div>
                        <div class="col-md-2">
                        </div>
                        <div class="col-md-2">
                        </div>
                    </div>

                </div>
            </div>
            <div class="modal-footer">
                <div class="col-lg-12">
                    <button type="button" class="btn btn-warning btn-anim" id="PrintPDFSupplier"><i class=" fa fa-print"></i><span class="btn-text">@Resources.Resource.Print</span></button>
                    <button type="button" class="btn btn-default btn-anim" data-dismiss="modal"><i class="fa fa-times"></i><span class="btn-text">@Resources.Resource.Close</span></button>

                </div>
            </div>
        </div>
    </div>
</div>
@Html.TextBoxFor(m => m.TheDecimalPointForTheLocalCurrency, new { @id = "TheDecimalPointForTheLocalCurrency", @style = "visibility : hidden;" })
@Html.TextBoxFor(m => m.TheDecimalPointForTheForeignCurrency, new { @id = "TheDecimalPointForTheForeignCurrency", @style = "visibility : hidden;" })
@Html.TextBoxFor(model => model.FromDate, new { @id = "FromDate", @class = "form-control input-sml", @Value = Model.FromDate.ToString("dd/MM/yyyy"), @style = "visibility : hidden;" })
@Html.TextBoxFor(model => model.ToDate, new { @id = "ToDate", @class = "form-control input-sml", @Value = Model.ToDate.ToString("dd/MM/yyyy"), @style = "visibility : hidden;" })




