@model Acc.ViewModels.DefinitionAssetSiteVM
@{
    ViewBag.Title = @Resources.Resource.AssetsTransferMovementsReport;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .panel-body {
        font-family: Verdana, Geneva, Tahoma, sans-serif
    }

    .panel-footer {
        font-family: Verdana, Geneva, Tahoma, sans-serif
    }

    .panel-title {
        font-family: Verdana, Geneva, Tahoma, sans-serif
    }

    .dt-button {
        display: none !important;
    }

    #MemberShipTypeBody1 {
        font-family: Verdana, Geneva, Tahoma, sans-serif
    }
</style>
<script>
    function GetAsset(data) {
        if (data.AssetID != null && data.AssetID != '') {
            document.getElementById("AssetID").value = data.AssetID;
        }
        else {
            document.getElementById("AssetID").value = '';
        }

    }
</script>
<div class="panel card-view">
    <div class="panel-heading" style="background-color: #34495E">
        <div class="pull-left">
            <h6 class="panel-title txt-light" style="font-weight:bold">@Resources.Resource.AssetsTransferMovementsReport</h6>
        </div>
        <div class="clearfix"></div>
    </div>
    <div class="panel-body">
        <div class="col-lg-12">
            <div class="col-lg-3">
                <div class="form-group">
                    @Html.LabelFor(m => m.AssetTypeID)
                    @Html.DropDownListFor(m => m.AssetTypeID, new SelectList(Model.AssetType, "AssetTypeID", "Name"), Resources.Resource.AssetType, new { @id = "AssetTypeID", @class = "form-control" })
                </div>
            </div>
            <div class="col-lg-3">
                <div class="form-group">
                    @Html.LabelFor(m => m.AdministrationID)
                    @Html.DropDownListFor(m => m.AdministrationID, new SelectList(Model.AssetAdministration, "AdministrationID", "AdministrationName"), Resources.Resource.AssetAdministration, new { @id = "AdministrationID", @class = "form-control" })
                </div>
            </div>
            <div class="col-lg-3">
                <div class="form-group">
                    @Html.LabelFor(m => m.CircleID)
                    @Html.DropDownListFor(m => m.CircleID, new SelectList(Model.AssetCircle, "CircleID", "CircleName"), Resources.Resource.AssetCircle, new { @id = "CircleID", @class = "form-control" })
                </div>
            </div>
            <div class="col-lg-3">
                <div class="form-group">
                    @Html.LabelFor(m => m.SectionID)
                    @Html.DropDownListFor(m => m.SectionID, new SelectList(Model.AssetSection, "SectionID", "SectionName"), Resources.Resource.AssetSection, new { @id = "SectionID", @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="col-lg-12">
            <div class="col-lg-3">
                <div class="form-group">
                    @Html.LabelFor(m => m.SiteID)
                    @Html.DropDownListFor(m => m.SiteID, new SelectList(Model.AssetSite, "SiteID", "SiteName"), Resources.Resource.AssetSite, new { @id = "SiteID", @class = "form-control" })
                </div>
            </div>
            <div class="col-lg-3">
                <div class="form-group">
                    @Html.LabelFor(m => m.TrusteeID)
                    @Html.DropDownListFor(m => m.TrusteeID, new SelectList(Model.AssetTrustee, "TrusteeID", "TrusteeName"), Resources.Resource.AssetTrustee, new { @id = "TrusteeID", @class = "form-control" })
                </div>
            </div>
            <div class="col-lg-3">
                @Html.LabelFor(m => m.AssetID)
                <div class="form-group  input-group">
                    @Html.TextBoxFor(m => m.AssetID, new { @id = "AssetID", @class = "form-control", @readonly = "readonly" })
                    <span class="input-group-btn">
                        <button class="btn btn-default btn-icon-anim btn-square" type="button" id="BtnAsset">
                            <i class="fa fa-search"></i>
                        </button>
                    </span>
                    <span class="input-group-btn">
                        <button class="btn btn-danger btn-icon-anim btn-square" type="button" id="BtnClearAsset">
                            <i class="fa fa-minus-square"></i>
                        </button>
                    </span>
                </div>
            </div>
        </div>
        <div class="col-lg-12">
            <div class="col-lg-3">
                <div class="form-group">
                    @Html.CheckBoxFor(m => m.ApproveTransferDate, new { @id = "ApproveTransferDate" }) @Resources.Resource.ApproveTransferDate /  @Html.LabelFor(m => m.FromTransferDate)
                    @Html.TextBoxFor(model => model.FromTransferDate, new { @id = "FromTransferDate", @class = "form-control", @Value = Model.FromTransferDate.ToString("dd/MM/yyyy") })
                </div>
            </div>
            <div class="col-lg-3">
                <div class="form-group">
                    @Html.LabelFor(m => m.ToTransferDate)
                    @Html.TextBoxFor(model => model.ToTransferDate, new { @id = "ToTransferDate", @class = "form-control", @Value = Model.ToTransferDate.ToString("dd/MM/yyyy") })
                </div>
            </div>
            <div class="col-lg-3">
                <div class="form-group">
                    @Html.CheckBoxFor(m => m.ApproveDeliveryDate, new { @id = "ApproveDeliveryDate" }) @Resources.Resource.ApproveDeliveryDate / @Html.LabelFor(m => m.FromDeliveryDate)
                    @Html.TextBoxFor(model => model.FromDeliveryDate, new { @id = "FromDeliveryDate", @class = "form-control", @Value = Model.FromDeliveryDate.ToString("dd/MM/yyyy") })
                </div>
            </div>
            <div class="col-lg-3">
                <div class="form-group">
                    @Html.LabelFor(m => m.ToDeliveryDate)
                    @Html.TextBoxFor(model => model.ToDeliveryDate, new { @id = "ToDeliveryDate", @class = "form-control", @Value = Model.ToDeliveryDate.ToString("dd/MM/yyyy") })
                </div>
            </div>
        </div>
        <div class="col-lg-12">
            <button type="submit" class="btn btn-anim btnSearch" id="reload"><i class=" fa fa-search"></i><span class="btn-text">@Resources.Resource.Search</span></button>
            @if (User.IsInRole("PrintRepAssetsTransferMovements") || User.IsInRole("CoOwner"))
            {
                <button type="submit" class="btn btn-warning btn-anim" id="PrintPDF"><i class=" fa fa-print"></i><span class="btn-text">@Resources.Resource.Print</span></button>
            }
            <button type="submit" class="btn btn-anim btnFav" id="AddToFav"><i class=" fa fa-star"></i><span class="btn-text">@Resources.Resource.AddToFav</span></button>
            <button type="button" class="btn btn-default btn-anim" id="CloseForm"><i class="fa fa-times"></i><span class="btn-text">@Resources.Resource.Close</span></button>
        </div>
        <div class="col-lg-12" style="margin-top : 10px">
            <div class="form-group">
                <table id="tdataTable" class="table table-hover table-bordered mb-0" width="100%">
                    <thead>
                        <tr>
                            <th>@Resources.Resource.AssetTypeID</th>
                            <th>@Resources.Resource.AssetID</th>
                            <th>@Resources.Resource.AssetName</th>
                            <th>@Resources.Resource.AssetAdministration</th>
                            <th>@Resources.Resource.AssetCircle</th>
                            <th>@Resources.Resource.AssetSection</th>
                            <th>@Resources.Resource.AssetSite</th>
                            <th>@Resources.Resource.TransferDate</th>
                            <th>@Resources.Resource.DefinitionUserName</th>
                            <th>@Resources.Resource.AssetTrustee</th>
                            <th>@Resources.Resource.DeliveryDate</th>
                            <th>@Resources.Resource.DeliveryUserName</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <div class="panel-footer">

    </div>
</div>
<div id="modal-container" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-content">
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script>
    $(document).ready(function () {

        function validatedate(dateString) {
            var dateformat = /(((0|1)[0-9]|2[0-9]|3[0-1])\/(0[1-9]|1[0-2])\/((19|20)\d\d))$/;
            if (dateString.match(dateformat)) {
                var operator = dateString.split('/');
                var datepart = [];
                if (operator.length > 1) {
                    datepart = dateString.split('/');
                }
                var month = parseInt(datepart[1]);
                var day = parseInt(datepart[0]);
                var year = parseInt(datepart[2]);
                var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
                if (month == 1 || month > 2) {
                    if (day > ListofDays[month - 1]) {
                        return false;
                    }
                } else if (month == 2) {
                    var leapYear = false;
                    if ((year % 4 == 0) && ((!(year % 100 == 0)) || (year % 400 == 0))) {
                        leapYear = true;
                    }
                    if ((leapYear == false) && (day >= 29)) {
                        return false;
                    } else
                        if ((leapYear == true) && (day > 29)) {
                            return false;
                        }
                }
            }
            else {
                return false;
            }
            return true;
        }
        $(document).on('click', '#AddToFav', function () {

				bootbox.confirm({
					message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.AreYouSure</h6>',
					className: 'rubberBand animated',
					buttons: {
						confirm: {
							label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Yes</span>',
							className: 'btn-success'
						},
						cancel: {
							label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.No</span>',
							className: 'btn-danger'
						}
					},
					callback: function (result) {
						if (result) {
							var dialog = bootbox.dialog({
								title: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.PleaseWait...</h6>',
								message: '<p style="font-family: Verdana, Geneva, Tahoma, sans-serif"><i class="fa fa-spin fa-spinner"></i> @Resources.Resource.Saving...</p>',
								closeButton: false
							});

							var dataToSave = {

								ScreenName: '@Resources.Resource.AssetsTransferMovementsReport',
                                ScreenUrl: "/DefinitionAsset/AssetsTransferMovements",
								ScreenType: 1

							};

							$.ajax({
								type: "POST",
								url: "/FavScreen/AddToFave",
								data: JSON.stringify(dataToSave),
								contentType: 'application/json',
								success: function (data) {

									dialog.modal('hide');
									if (data.Code == 0) {
										toastr.error(data.Msg);
									}
									else if (data.Code == 1) {
										toastr.success(data.Msg);
									}

								},
								error: function (data) {
									dialog.modal('hide');
									toastr.error(data);
								}

							});
						}
					}
				});


		});

        $(document).on('click', '#PrintPDF', function () {
            var AssetTypeID = $("#AssetTypeID").val();
            var AdministrationID = $("#AdministrationID").val();
            var CircleID = $("#CircleID").val();
            var SectionID = $("#SectionID").val();
            var SiteID = $("#SiteID").val();
            var TrusteeID = $("#TrusteeID").val();

            var ApproveTransferDate = $("#ApproveTransferDate:checked").val();
            var ApproveDeliveryDate = $("#ApproveDeliveryDate:checked").val();
            var AssetID = $("#AssetID").val();

            var FromTransferDate = $("#FromTransferDate").val();
            var ToTransferDate = $("#ToTransferDate").val();
            var FromDeliveryDate = $("#FromDeliveryDate").val();
            var ToDeliveryDate = $("#ToDeliveryDate").val();



            if (ApproveTransferDate) {
                ApproveTransferDate = 1
            }
            else {
                ApproveTransferDate = 0
            }

            if (ApproveDeliveryDate) {
                ApproveDeliveryDate = 1

            }
            else {
                ApproveDeliveryDate = 0

            }


            var words = FromTransferDate.split('/');
            FromTransferDate = words[0] + words[1] + words[2];
            words = ToTransferDate.split('/');
            ToTransferDate = words[0] + words[1] + words[2];
            words = FromDeliveryDate.split('/');
            FromDeliveryDate = words[0] + words[1] + words[2];
            words = ToDeliveryDate.split('/');
            ToDeliveryDate = words[0] + words[1] + words[2];



            if (AssetTypeID == '' || AssetTypeID == null) {
                AssetTypeID = "0";
            }

            if (AdministrationID == '' || AdministrationID == null) {
                AdministrationID = "0";
            }


            if (CircleID == '' || CircleID == null) {
                CircleID = "0";
            }

            if (SectionID == '' || SectionID == null) {
                SectionID = "0";
            }


            if (SiteID == '' || SiteID == null) {

                SiteID = "0";
            }
            if (TrusteeID == '' || TrusteeID == null) {

                TrusteeID = "0";
            }

            if (AssetID == '' || AssetID == null) {

                AssetID = "0";
            }

           

            window.open('/PDFReport/GetAssetsTransferMovementsReportPDF/' + AssetTypeID + "/" + AdministrationID + "/" + CircleID + "/" + SectionID + "/" + SiteID + "/" + TrusteeID + "/" + ApproveTransferDate + "/" + ApproveDeliveryDate + "/" + AssetID + "/" + FromTransferDate + "/" + ToTransferDate + "/" + FromDeliveryDate + "/" + ToDeliveryDate + "/0", '_blank');

        });
            $(document).on('click', '#CloseForm', function () {
                window.location = "/Report/ReportDash";
            });
            $('#ApproveTransferDate').click(function () {
                document.getElementById('ApproveDeliveryDate').checked = false;
            });
            $('#ApproveDeliveryDate').click(function () {
                document.getElementById('ApproveTransferDate').checked = false;
            });
        $("#FromTransferDate").blur(function () {
            var dDate = document.getElementById("FromTransferDate").value;
            if (!validatedate(dDate)) {
                bootbox.alert({
                    message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.InvalidDate</h6>',
                    className: 'rubberBand animated',
                    buttons: {
                        ok: {
                            label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Ok</span>',
                            className: 'btn-primary'
                        }
                    }
                });
                document.getElementById("FromTransferDate").value = '01/01/' + new Date().getFullYear()
            }
        });
        $("#ToTransferDate").blur(function () {
            var dDate = document.getElementById("ToTransferDate").value;
            if (!validatedate(dDate)) {
                bootbox.alert({
                    message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.InvalidDate</h6>',
                    className: 'rubberBand animated',
                    buttons: {
                        ok: {
                            label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Ok</span>',
                            className: 'btn-primary'
                        }
                    }
                });
                document.getElementById("ToTransferDate").value = '01/01/' + new Date().getFullYear()
            }
        });
            $("#FromTransferDate").mask("99/99/9999");
        $("#ToTransferDate").mask("99/99/9999");
        $("#FromDeliveryDate").blur(function () {
            var dDate = document.getElementById("FromDeliveryDate").value;
            if (!validatedate(dDate)) {
                bootbox.alert({
                    message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.InvalidDate</h6>',
                    className: 'rubberBand animated',
                    buttons: {
                        ok: {
                            label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Ok</span>',
                            className: 'btn-primary'
                        }
                    }
                });
                document.getElementById("FromDeliveryDate").value = '01/01/' + new Date().getFullYear()
            }
        });
        $("#ToDeliveryDate").blur(function () {
            var dDate = document.getElementById("ToDeliveryDate").value;
            if (!validatedate(dDate)) {
                bootbox.alert({
                    message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.InvalidDate</h6>',
                    className: 'rubberBand animated',
                    buttons: {
                        ok: {
                            label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Ok</span>',
                            className: 'btn-primary'
                        }
                    }
                });
                document.getElementById("ToDeliveryDate").value = '01/01/' + new Date().getFullYear()
            }
        });
            $("#FromDeliveryDate").mask("99/99/9999");
            $("#ToDeliveryDate").mask("99/99/9999");
            $("#FromConsStartDate").focus().select();
            $("#FromTransferDate").keyup(function (event) {
                if (event.keyCode == 13) {
                    $("#ToTransferDate").focus().select();
                }

            });
            $("#ToTransferDate").keyup(function (event) {
                if (event.keyCode == 13) {
                    $("#FromDeliveryDate").focus().select();
                }

            });
            $("#FromDeliveryDate").keyup(function (event) {
                if (event.keyCode == 13) {
                    $("#ToDeliveryDate").focus().select();
                }

            });
            $("#ToDeliveryDate").keyup(function (event) {
                if (event.keyCode == 13) {
                    $("#FromTransferDate").focus().select();
                }

            });
            $('#BtnAsset').on('click', function () {
            var dialog = bootbox.dialog({
                title: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.PleaseWait...</h6>',
                message: '<p style="font-family: Verdana, Geneva, Tahoma, sans-serif"><i class="fa fa-spin fa-spinner"></i> @Resources.Resource.PreparingData...</p>',
                closeButton: false
            });
            var url = '/MultiUse/SearchAsset/GetAsset';
            $.get(url, function (data) {
                $('#modal-container').html(data);
                $('#modal-container').modal('show');
                dialog.modal('hide');
            })
        });
        $('#BtnClearAsset').on('click', function () {
            document.getElementById("AssetID").value = '';
        });
            $(document).on('click', '#reload', function () {
            var dialog = bootbox.dialog({
                title: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.PleaseWait...</h6>',
                message: '<p style="font-family: Verdana, Geneva, Tahoma, sans-serif"><i class="fa fa-spin fa-spinner"></i> @Resources.Resource.PreparingData...</p>',
                closeButton: false
            });
            tabelMemRef.ajax.reload();
            dialog.modal('hide');
        });
        $(document).on('click', '.js-Pop', function (e) {
            $('#modal-container').removeData('bs.modal');
            e.preventDefault();
            $(this).attr('data-target', '#modal-container');
            $(this).attr('data-toggle', 'modal');

        });
        $('#modal-container').on('hidden.bs.modal', function () {
            $(this).removeData('bs.modal');
        });
        $('#CancelModal').on('click', function () {

            return false;
        });
         var tabelMemRef = $("#tdataTable").DataTable({
                        "language": {
                "emptyTable": '@Resources.Resource.EmptyTable',
                "search": '@Resources.Resource.Search',
                "loadingRecords": '@Resources.Resource.LoadingRecords',
                "processing": '@Resources.Resource.Processing',
                "zeroRecords": '@Resources.Resource.ZeroRecords',
                "info": '@Resources.Resource.Info',
                "infoEmpty": '@Resources.Resource.InfoEmpty',
                "lengthMenu": '@Resources.Resource.LengthMenu',
                "infoFiltered": '@Resources.Resource.InfoFiltered',
                "paginate": {
                    "previous": '@Resources.Resource.Previous',
                    "next": '@Resources.Resource.Next',
                    "first": '@Resources.Resource.First',
                    "last": '@Resources.Resource.Last',
                },
                "aria": {
                    "sortAscending": '@Resources.Resource.SortAscending',
                    "sortDescending": '@Resources.Resource.SortDescending'
                }
            },
            "scrollX": true,
            "ordering": false,
            "autoWidth": false,
            "paging": false,
            "searching": false,
            "columnDefs": [
                {
                    "targets": [0],
                    "className": "dt-center"
                },
                {
                    "targets": [1],
                    "className": "dt-center"
                },
                {
                    "targets": [2],
                    "className": "dt-center"
                },
                {
                    "targets": [3],
                    "className": "dt-center"
                },
                {
                    "targets": [4],
                    "className": "dt-center"
                },
                {
                    "targets": [5],
                    "className": "dt-center"
                },
                {
                    "targets": [6],
                    "className": "dt-center"
                },
                {
                    "targets": [7],
                    "className": "dt-center"
                },
                {
                    "targets": [8],
                    "className": "dt-center"
                },
                {
                    "targets": [9],
                    "className": "dt-center"
                },
                {
                    "targets": [10],
                    "className": "dt-center"
                },
                {
                    "targets": [10],
                    "className": "dt-center"
                },
                {
                    "targets": [11],
                    "className": "dt-center"
                }
            ],
            dom: 'Bfrtip',
            buttons: [

            ],
            ajax: {
                "type": "POST",
                url: "/DefinitionAsset/GetAssetsTransferMovementsReport",
                "data": function (d) {
                    d.AssetTypeID = $("#AssetTypeID").val();
                    d.AdministrationID = $("#AdministrationID").val();
                    d.CircleID = $("#CircleID").val();
                    d.SectionID = $("#SectionID").val();
                    d.SiteID = $("#SiteID").val();
                    d.TrusteeID = $("#TrusteeID").val();
                    d.ApproveTransferDate = $("#ApproveTransferDate:checked").val();
                    d.ApproveDeliveryDate = $("#ApproveDeliveryDate:checked").val();
                    d.AssetID = $("#AssetID").val();
                    d.FromTransferDate = $("#FromTransferDate").val();
                    d.ToTransferDate = $("#ToTransferDate").val();
                    d.FromDeliveryDate = $("#FromDeliveryDate").val();
                    d.ToDeliveryDate = $("#ToDeliveryDate").val();
                },

                dataSrc: ""

            },
            columns: [
                {
                    data: "AssetTypeName"

                },
                {
                    data: "AssetID"

                },
                {
                    data: "AssetName"

                },
                {
                    data: "AdministrationName"

                },
                {
                    data: "CircleName"

                },
                {
                    data: "SectionName"

                },
                {
                    data: "SiteName"

                },
                {
                    data: "TransferDate",
                    render: function (data, type, r) {
                        return moment(data).format('DD/MM/YYYY')
                    }
                },

                {
                    data: "DefinitionUserName"
                },
                {
                    data: "TrusteeName"

                },
                {
                    data: "DeliveryDate",
                    render: function (data, type, r) {
                        return moment(data).format('DD/MM/YYYY')
                    }
                },
                {
                    data: "DeliveryUserName"

                }
            ]

        });

    });
</script>
}







