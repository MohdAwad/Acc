@model Acc.ViewModels.PaperFilterVM
@{
    ViewBag.Title = @Resources.Resource.PapersDetails;
}
<style>
    .modal-body {
        font-family: Verdana, Geneva, Tahoma, sans-serif;
        font-size: 8Pt
    }

    .modal-footer {
        font-family: Verdana, Geneva, Tahoma, sans-serif
    }

    .modal-title {
        font-family: Verdana, Geneva, Tahoma, sans-serif
    }

    .modal-dialog {
        width: 90%
    }
</style>
<script>
    $(document).ready(function () {

        var TheDecimalPointForTheLocalCurrency = document.getElementById("TheDecimalPointForTheLocalCurrency").value;
        var TheDecimalPointForTheForeignCurrency = document.getElementById("TheDecimalPointForTheForeignCurrency").value;
        function formatMoney(amount, decimalCount, decimal = ".", thousands = ",") {
            try {
                decimalCount = Math.abs(decimalCount);
                decimalCount = isNaN(decimalCount) ? decimalCount : decimalCount;

                const negativeSign = amount < 0 ? "-" : "";

                let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();
                let j = (i.length > 3) ? i.length % 3 : 0;

                return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : "");
            } catch (e) {
                console.log(e)
            }
        };

        $(document).on('click', '#PrintPDF', function () {


            window.open('/PDFReport/GetTrankingChequesReportReceipt/@Model.ChequeNumber/@Model.OriginalVoucherNumber/@Model.OriginalCompanyTransactionKindNo/@Model.ChequeAmount/@Model.RowNumber/@Model.AccountNumberThird/@Model.OriginalTransactionKindNo/@Model.CompanyYear/@Model.PaidInAccountNumber', '_blank');
        });
        var tabelMemRef = $("#tdataTableDetail").DataTable({
            "language": {
                "emptyTable": '@Resources.Resource.EmptyTable',
                "search": '@Resources.Resource.Search',
                "loadingRecords": '@Resources.Resource.LoadingRecords',
                "processing": '@Resources.Resource.Processing',
                "zeroRecords": '@Resources.Resource.ZeroRecords',
                "info": '@Resources.Resource.Info',
                "infoEmpty": '@Resources.Resource.InfoEmpty',
                "lengthMenu": '@Resources.Resource.LengthMenu',
                "infoFiltered": '@Resources.Resource.InfoFiltered',
                "paginate": {
                    "previous": '@Resources.Resource.Previous',
                    "next": '@Resources.Resource.Next',
                    "first": '@Resources.Resource.First',
                    "last": '@Resources.Resource.Last',
                },
                "aria": {
                    "sortAscending": '@Resources.Resource.SortAscending',
                    "sortDescending": '@Resources.Resource.SortDescending'
                }
            },
            "scrollY": "250px",
            "scrollX": true,
            "ordering": false,
            "autoWidth": false,
            "paging": false,
            "searching": false,
            "columnDefs": [
                {
                    "targets": [0],
                    "className": "dt-center"
                },
                {
                    "targets": [1],
                    "className": "dt-center"
                },
                {
                    "targets": [2],
                    "className": "dt-center"
                },
                {
                    "targets": [3],
                    "className": "dt-center"
                },
                {
                    "targets": [4],
                    "className": "dt-center"
                },
                {
                    "targets": [5],
                    "className": "dt-center"
                },
                {
                    "targets": [6],
                    "className": "dt-center"
                },
                {
                    "targets": [7],
                    "className": "dt-center"
                },
                {
                    "targets": [8],
                    "className": "dt-center"
                },
                {
                    "targets": [9],
                    "className": "dt-center"
                },
                {
                    "targets": [10],
                    "className": "dt-center"
                },
                {
                    "targets": [11],
                    "visible": false,
                    "searchable": false
                }
            ],
            dom: 'Bfrtip',
            buttons: [
            ],
            ajax: {
                "type": "GET",
                url: "/ReceiptVoucherBank/GetPaperDetails/@Model.ChequeNumber/@Model.OriginalVoucherNumber/@Model.OriginalCompanyTransactionKindNo/@Model.ChequeAmount/@Model.RowNumber/@Model.AccountNumberThird/@Model.OriginalTransactionKindNo/@Model.CompanyYear/@Model.PaidInAccountNumber",

                dataSrc: ""
            },
            columns: [
                {
                    data: "CaseDetail"
                },
                {
                    data: "CaseName"

                },
                {
                    data: "ChequeNumber"
                },
                {
                    data: "sChequeDate"

                },
                {
                    data: "ChequeAmount",
                    render: function (data, type, r) {
                        if (data == 0) {
                            return ""
                        }
                        else {
                            return (formatMoney(data, TheDecimalPointForTheLocalCurrency))
                        }

                    }
                },
                {
                    data: "IsBill",
                    render: function (data, type, r) {
                        if (data == 1) {
                            return r.PaidInAccountName + ' / ' + r.BillCustomerName
                        }
                        else {
                            return r.PaidInAccountName
                        }
                    }
                },
                {
                    data: "BankOrEndorsementAccountName"

                },
                {
                    data: "DrawerName"

                },
                {
                    data: "VoucherNumber"
                },
                {
                    data: "VoucherDate",
                    render: function (data, type, r) {
                        return moment(data).format('DD/MM/YYYY')
                    }

                },
                {
                    data: "CompanyTransactionKindName"

                },
                {
                    data: "IsBill"

                }

            ]
        });
    });
</script>
<div id="myModal" class="modal fade in" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="display: block;">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header" style="background-color: #34495E">
                <div class="pull-left">
                    <h6 class="modal-title txt-light" style="font-weight:bold">
                        @Resources.Resource.PapersDetails
                    </h6>
                </div>
                <div class="clearfix"></div>
            </div>
            <div class="modal-body">
                <table id="tdataTableDetail" class="table table-hover table-bordered mb-0" width="100%">
                    <thead>
                        <tr>
                            <th></th>
                            <th></th>
                            <th>@Resources.Resource.ChequeNumber</th>
                            <th>@Resources.Resource.ChequeDate</th>
                            <th>@Resources.Resource.ChequesAmount</th>
                            <th>@Resources.Resource.PaidAccount</th>
                            <th>@Resources.Resource.BankOrEndorsementAccountName</th>
                            <th>@Resources.Resource.DrawerName</th>
                            <th>@Resources.Resource.VoucherNumber</th>
                            <th>@Resources.Resource.VoucherDate</th>
                            <th>@Resources.Resource.CompanyTransactionKindID</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>

            </div>
            <div class="modal-footer">
                <div class="col-lg-12">
                    @if (User.IsInRole("PrintRepTrankingChequesPrintReport") || User.IsInRole("CoOwner"))
                    {
                        <button type="submit" class="btn btn-warning btn-anim" id="PrintPDF"><i class=" fa fa-print"></i><span class="btn-text">@Resources.Resource.Print</span></button>
                    }
                    <button type="button" class="btn btn-default btn-anim" data-dismiss="modal"><i class="fa fa-times"></i><span class="btn-text">@Resources.Resource.Close</span></button>

                </div>
            </div>
        </div>
    </div>
</div>
@Html.TextBoxFor(m => m.TheDecimalPointForTheLocalCurrency, new { @id = "TheDecimalPointForTheLocalCurrency", @style = "visibility : hidden;" })
@Html.TextBoxFor(m => m.TheDecimalPointForTheForeignCurrency, new { @id = "TheDecimalPointForTheForeignCurrency", @style = "visibility : hidden;" })








