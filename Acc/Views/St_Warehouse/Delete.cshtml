@model Acc.ViewModels.St_WarehouseVM
@{
    ViewBag.Title = @Resources.Resource.Delete;
}
<style>
    .modal-body {
        font-family: Verdana, Geneva, Tahoma, sans-serif
    }

    .modal-footer {
        font-family: Verdana, Geneva, Tahoma, sans-serif
    }

    .modal-title {
        font-family: Verdana, Geneva, Tahoma, sans-serif
    }
</style>

@if (Model.InventoryType == 1)
{
    <div id="myModal" class="modal fade in" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="display: block;">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header" style="background-color: #34495E">
                    <div class="pull-left">
                        <h6 class="modal-title txt-light" style="font-weight:bold">@Resources.Resource.Delete</h6>
                    </div>
                    <div class="clearfix"></div>
                </div>
                <div class="modal-body">
                    @Html.ValidationSummary(true, "Please Fix The Foloing Error!")

                    <div class="col-lg-12">
                        <div class="col-lg-5">
                            <div class="form-group">
                                @Html.LabelFor(m => m.StockCode)

                                @Html.TextBoxFor(m => m.StockCode, new { @id = "StockCode", @class = "form-control input-sml", @readonly = "readonly" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.ArabicName)

                                @Html.TextBoxFor(m => m.ArabicName, new { @id = "ArabicName", @class = "form-control input-sml", @readonly = "readonly" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.EnglishName)

                                @Html.TextBoxFor(m => m.EnglishName, new { @id = "EnglishName", @class = "form-control input-sml", @readonly = "readonly" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.Telephone)

                                @Html.TextBoxFor(m => m.Telephone, new { @id = "Telephone", @class = "form-control input-sml", @readonly = "readonly" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.Address)
                                @Html.TextBoxFor(m => m.Address, new { @id = "Address", @class = "form-control input-sml", @readonly = "readonly" })
                            </div>
                        </div>
                        <div class="col-lg-7">
                            <div class="form-group">
                                @Html.Label(Resources.Resource.AccountNumber)
                                @Html.TextBoxFor(m => m.AccountNumber, new { @id = "AccountNumber", @class = "form-control input-sml", @readonly = "readonly" })
                            </div>
                            <div class="form-group">
                                @Html.Label(Resources.Resource.AccountName)
                                @Html.TextBoxFor(m => m.AccountName, new { @id = "AccountName", @class = "form-control input-sml", @readonly = "readonly" })
                            </div>
                            @if (Model.WorkWithCostCenter)
                            {
                        <div class="form-group">
                            @Html.Label(Resources.Resource.CostCenter)
                            @Html.TextBoxFor(m => m.CostCenterNumber, new { @id = "CostCenterNumber", @class = "form-control input-sml", @readonly = "readonly" })
                        </div>
                        <div class="form-group">
                            @Html.Label(Resources.Resource.CostCenterName)
                            @Html.TextBoxFor(m => m.CostCenterName, new { @id = "CostCenterName", @class = "form-control input-sml", @readonly = "readonly" })
                        </div>
                            }
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="col-lg-12">
                        <button type="submit" class="btn btn-anim btnDelete-lg" id="Delete"> <i class="fa fa-trash-o"></i><span class="btn-text">@Resources.Resource.Delete</span></button>
                        <button type="button" class="btn btn-default btn-anim" data-dismiss="modal" id="Close"><i class="fa fa-times"></i><span class="btn-text">@Resources.Resource.Close</span></button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div id="myModal" class="modal fade in" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="display: block;">
        <div class="modal-dialog modal-sm ">
            <div class="modal-content">
                <div class="modal-header" style="background-color: #34495E">
                    <div class="pull-left">
                        <h6 class="modal-title txt-light" style="font-weight:bold">@Resources.Resource.Delete</h6>
                    </div>
                    <div class="clearfix"></div>
                </div>
                <div class="modal-body">
                    @Html.ValidationSummary(true, "Please Fix The Foloing Error!")

                    <div class="col-lg-12">
                        <div class="form-group">
                            @Html.LabelFor(m => m.StockCode)

                            @Html.TextBoxFor(m => m.StockCode, new { @id = "StockCode", @class = "form-control input-sml", @readonly = "readonly" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.ArabicName)  <span style="color:red">*</span>

                            @Html.TextBoxFor(m => m.ArabicName, new { @id = "ArabicName", @class = "form-control input-sml", @readonly = "readonly" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.EnglishName)

                            @Html.TextBoxFor(m => m.EnglishName, new { @id = "EnglishName", @class = "form-control input-sml", @readonly = "readonly" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.Telephone)

                            @Html.TextBoxFor(m => m.Telephone, new { @id = "Telephone", @class = "form-control input-sml", @readonly = "readonly" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.Address)
                            @Html.TextBoxFor(m => m.Address, new { @id = "Address", @class = "form-control input-sml", @readonly = "readonly" })
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="col-lg-12">
                        <button type="submit" class="btn btn-anim btnDelete-lg" id="Delete"> <i class="fa fa-trash-o"></i><span class="btn-text">@Resources.Resource.Delete</span></button>
                        <button type="button" class="btn btn-default btn-anim" data-dismiss="modal" id="Close"><i class="fa fa-times"></i><span class="btn-text">@Resources.Resource.Close</span></button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@Html.CheckBoxFor(m => m.WorkWithCostCenter, new { @id = "WorkWithCostCenter", @style = "visibility : hidden;" })
@Html.TextBoxFor(m => m.InventoryType, new { @id = "InventoryType", @style = "visibility : hidden;" })












