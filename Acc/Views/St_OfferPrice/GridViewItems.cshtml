
@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "ItemsGrid";
        settings.CallbackRouteValues = new { Controller = "St_OfferPrice", Action = "GridViewItems" };
        settings.SettingsEditing.BatchEditSettings.KeepChangesOnCallbacks = DefaultBoolean.False;
        settings.SettingsEditing.Mode = GridViewEditingMode.Batch;
        settings.SettingsCommandButton.NewButton.Text = "<span class='btn btn-success btn-sml btn-icon-anim ' style='padding: 4px;'><i class='fa fa-plus-circle' ></i></span>";
        settings.SettingsCommandButton.DeleteButton.Text = "<span class='btn btn-danger btn-sml btn-icon-anim  ' style='padding: 4px;'><i class='fa fa-minus-circle'  ></i></span>";
        settings.SettingsEditing.BatchEditSettings.HighlightDeletedRows = false;
        settings.SettingsEditing.BatchEditSettings.ShowConfirmOnLosingChanges = false;
        settings.ClientSideEvents.BatchEditConfirmShowing = "function(s, e){ e.cancel = true; }";
        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButtonInHeader = true;
        settings.SettingsEditing.ShowModelErrorsForEditors = true;
        settings.ClientSideEvents.BeginCallback = "OnBeginCallback";
        settings.ClientSideEvents.EndCallback = "OnEndCallback";
        settings.Settings.ShowFilterBar = GridViewStatusBarMode.Hidden;
        settings.Settings.ShowPreview = false;
        settings.Settings.ShowFilterRowMenu = false;
        settings.Settings.ShowTitlePanel = false;

        if (Resources.Resource.CurLang == "Arb")
        {
            settings.Styles.Header.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Right;
        }
        else
        {
            settings.Styles.Header.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left;
        }
        settings.SettingsEditing.NewItemRowPosition = GridViewNewItemRowPosition.Bottom;
        settings.CommandColumn.ShowDeleteButton = true;
        settings.CommandButtonInitialize = (s, e) =>
        {
            if (e.ButtonType == ColumnCommandButtonType.Update || e.ButtonType == ColumnCommandButtonType.Cancel ||
            e.ButtonType == ColumnCommandButtonType.Delete)
                e.Visible = false;
        };
        settings.Theme = "iOS";
        settings.KeyFieldName = "RowNumber";
        settings.SettingsPager.Mode = GridViewPagerMode.ShowAllRecords;
        settings.Settings.ShowGroupPanel = false;
        settings.Settings.ShowFilterRow = false;
        settings.CommandColumn.ShowNewButton = true;
        settings.SettingsBehavior.ConfirmDelete = true;
        settings.SettingsBehavior.AllowSort = false;
        settings.SettingsBehavior.AllowDragDrop = false;
        settings.ClientSideEvents.Init = "OnInit";
        settings.ClientSideEvents.BatchEditEndEditing = "Grid_BatchEditEndEditing";
        settings.ClientSideEvents.BatchEditStartEditing = "Grid_BatchEditStartEditing";
        settings.ClientSideEvents.BatchEditRowDeleting = "Grid_DeleteRowEvent";
        settings.KeyboardSupport = true;
        settings.CommandButtonInitialize = (s, e) =>
        {
            if (e.ButtonType == ColumnCommandButtonType.Update || e.ButtonType == ColumnCommandButtonType.Cancel)
                e.Visible = false;
        };

        settings.Columns.Add(column =>
        {
            column.FieldName = "ItemCode";
            column.Width = 150;
            column.Caption = Resources.Resource.ItemCode;
            column.Settings.ShowEditorInBatchEditMode = true;
            column.Settings.AllowHeaderFilter = DefaultBoolean.False;
            column.Settings.AllowAutoFilter = DefaultBoolean.False;
            column.EditorProperties().TextBox(txtbox =>
            {
                txtbox.ClientSideEvents.Init = "AutoCompleteItems";
            });
        });
        settings.Columns.Add(column =>
        {
            column.Width = 250;
            column.FieldName = "ItemName";
            column.Caption = Resources.Resource.ItemName;
            column.ReadOnly = true;
            column.Settings.ShowEditorInBatchEditMode = false;
            column.Settings.AllowHeaderFilter = DefaultBoolean.False;
            column.Settings.AllowAutoFilter = DefaultBoolean.False;
        });
        settings.Columns.Add(column =>
        {
            column.Width = 170;
            column.FieldName = "ItemUnitName";
            column.Caption = Resources.Resource.Unit;
            column.ReadOnly = true;
            column.Settings.ShowEditorInBatchEditMode = false;
            column.Settings.AllowHeaderFilter = DefaultBoolean.False;
            column.Settings.AllowAutoFilter = DefaultBoolean.False;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Quantity";
            column.Width = 100;
            column.Caption = Resources.Resource.Quantity;
            column.Settings.ShowEditorInBatchEditMode = true;
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;
            (column.PropertiesEdit as SpinEditProperties).NumberType = SpinEditNumberType.Float;
            (column.PropertiesEdit as SpinEditProperties).DisplayFormatInEditMode = true;
            (column.PropertiesEdit as SpinEditProperties).DisplayFormatString = "0.000";
            (column.PropertiesEdit as SpinEditProperties).DecimalPlaces = 3;
            (column.PropertiesEdit as SpinEditProperties).MinValue = 0;
            (column.PropertiesEdit as SpinEditProperties).MaxValue = 10000000000;
            column.Settings.AllowHeaderFilter = DefaultBoolean.False;
            column.Settings.AllowAutoFilter = DefaultBoolean.False;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Price";
            column.Width = 100;
            column.Caption = Resources.Resource.Price;
            column.Settings.ShowEditorInBatchEditMode = true;
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;
            (column.PropertiesEdit as SpinEditProperties).NumberType = SpinEditNumberType.Float;
            (column.PropertiesEdit as SpinEditProperties).DisplayFormatInEditMode = true;
            (column.PropertiesEdit as SpinEditProperties).DisplayFormatString = "0.000";
            (column.PropertiesEdit as SpinEditProperties).DecimalPlaces = 3;
            (column.PropertiesEdit as SpinEditProperties).MinValue = 0;
            (column.PropertiesEdit as SpinEditProperties).MaxValue = 10000000000;
            column.Settings.AllowHeaderFilter = DefaultBoolean.False;
            column.Settings.AllowAutoFilter = DefaultBoolean.False;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Total";
            column.Width = 100;
            column.Caption = Resources.Resource.Total;
            column.Settings.ShowEditorInBatchEditMode = false;
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;
            (column.PropertiesEdit as SpinEditProperties).NumberType = SpinEditNumberType.Float;
            (column.PropertiesEdit as SpinEditProperties).DisplayFormatInEditMode = true;
            (column.PropertiesEdit as SpinEditProperties).DisplayFormatString = "0.000";
            (column.PropertiesEdit as SpinEditProperties).DecimalPlaces = 3;
            (column.PropertiesEdit as SpinEditProperties).MinValue = 0;
            (column.PropertiesEdit as SpinEditProperties).MaxValue = 10000000000;
            column.Settings.AllowHeaderFilter = DefaultBoolean.False;
            column.Settings.AllowAutoFilter = DefaultBoolean.False;
            column.ReadOnly = true;
        });
        settings.Columns.Add(column =>
        {
            column.Width = 170;
            column.FieldName = "SimilarItemCode";
            column.Caption = Resources.Resource.SimilarItem;
            column.ReadOnly = true;
            column.Settings.ShowEditorInBatchEditMode = false;
            column.Settings.AllowHeaderFilter = DefaultBoolean.False;
            column.Settings.AllowAutoFilter = DefaultBoolean.False;
            column.CellStyle.CssClass = "hideColumn";
            column.HeaderStyle.CssClass = "hideColumn";
        });
        settings.InitNewRow += (s, e) =>
        {
            e.NewValues["Quantity"] = 0;
            e.NewValues["Price"] = 0;
            e.NewValues["Total"] = 0;
        };
        settings.CustomJSProperties = (s, e) =>
        {
            if (ViewData["ErrorFlag"] != null)
                e.Properties.Add("cpErrorFlag", (bool)ViewData["ErrorFlag"]);
        };
    });
    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()

