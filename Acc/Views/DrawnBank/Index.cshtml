
@{
    ViewBag.Title = @Resources.Resource.DrawnBank;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

    <style>
        .panel-body {
            font-family: Verdana, Geneva, Tahoma, sans-serif
        }

        .panel-footer {
            font-family: Verdana, Geneva, Tahoma, sans-serif
        }

        .panel-title {
            font-family: Verdana, Geneva, Tahoma, sans-serif
        }

        .dt-button {
            display: none !important;
        }
    </style>
<div class="panel card-view">
    <div class="panel-heading" style="background-color: #34495E">
        <div class="pull-left">
            <h6 class="panel-title txt-light" style="font-weight:bold">@Resources.Resource.DrawnBank</h6>
        </div>
        <div class="clearfix"></div>
    </div>
    <div class="panel-body">
        <div class="col-lg-12">
            @if (User.IsInRole("AddBankswithdrawnfrom") || User.IsInRole("CoOwner"))
            {
                <a class="btn btn-primary btn-anim js-Pop" id="btnSave" href="/DrawnBank/AddNew"> <i class="fa fa-save"></i><span class="btn-text">@Resources.Resource.New</span></a>
            }
            @if (User.IsInRole("PrintBankswithdrawnfrom") || User.IsInRole("CoOwner"))
            {

                <a class="btn btn-warning btn-anim" id="btnPrintExcel"> <i class="fa fa-file-excel-o"></i><span class="btn-text">@Resources.Resource.PrintExcel</span></a>

            }
            <button type="button" class="btn btn-default btn-anim" id="CloseForm"> <i class="fa fa-times"></i><span class="btn-text">@Resources.Resource.Close</span></button>
        </div>
        <div class="col-lg-12" style="margin-top:10px;">
            <table id="tdataTable" class="table table-hover table-bordered mb-0" width="100%">
                <thead>
                    <tr>
                        <th>@Resources.Resource.Serial</th>
                        <th>@Resources.Resource.BankName</th>
                        <th>@Resources.Resource.Active</th>
                        <th>@Resources.Resource.Modify</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>

    </div>
    <div class="panel-footer">

    </div>
</div>


<div id="modal-container" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-content">
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script>

	$(document).ready(function () {
		$(document).on('click', '#CloseForm', function () {
			window.location = "/CompanySettingsDash/Index";
		});


				$(document).on('click', '#btnPrintExcel', function () {

			var dialog = bootbox.dialog({
				title: '@Resources.Resource.PleaseWait',
				message: '<p><i class="fa fa-spin fa-spinner"></i> @Resources.Resource.Print...</p>',
				closeButton: false
			});


			var dataToSave = [];
			tabelMemRef.rows().every(function (rowIdx, tableLoop, rowLoop) {
				var data = this.data();
				dataToSave.push(data);


			});


			$.ajax({
				type: "POST",
                url: "/ExcelREport/CreateDrawnBankExcel",
				data: JSON.stringify(dataToSave),
				contentType: 'application/json',
				success: function (data) {
					dialog.modal('hide');


                    window.location = '/ExcelReport/DownloadDrawnBankExcel?fileGuid=' + data.FileGuid;



				},
				error: function (data) {
					dialog.modal('hide');
					toastr.error(data);
				}

			});

			dialog.modal('hide');
			//$('#tdataTable').DataTable().ajax.reload();

		});


		$(document).on('click', '#SaveNewDrawnBank', function () {
			if ($("#ArabicName").val() == '') {
				bootbox.alert({
					message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.PleasefillalRequiredfields</h6>',
					className: 'rubberBand animated',
					buttons: {
						ok: {
							label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Ok</span>',
							className: 'btn-primary'
						}
					}
				});

			}
			else {
				bootbox.confirm({
					message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.AreYouSure</h6>',
					className: 'rubberBand animated',
					buttons: {
						confirm: {
							label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Yes</span>',
							className: 'btn-success'
						},
						cancel: {
							label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.No</span>',
							className: 'btn-danger'
						}
					},
					callback: function (result) {
						if (result) {
							var dialog = bootbox.dialog({
								title: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.PleaseWait...</h6>',
								message: '<p style="font-family: Verdana, Geneva, Tahoma, sans-serif"><i class="fa fa-spin fa-spinner"></i> @Resources.Resource.Saving...</p>',
								closeButton: false
							});
							var dataToSave = {

								BankID: $("#BankID").val(),
								ArabicName: $("#ArabicName").val(),
								EnglishName: $("#EnglishName").val(),
								Active: $("#Active:checked").val()

							};

							$.ajax({
								type: "POST",
								url: "/DrawnBank/SaveDrawnBank",
								data: JSON.stringify(dataToSave),
								contentType: 'application/json',
								success: function (data) {

									dialog.modal('hide');
									if (data.Code == 0) {
										toastr.error(data.Msg);
									}
									else if (data.Code == 1) {

										toastr.success(data.Msg);

										tabelMemRef.ajax.reload();

										document.getElementById("BankID").value = data.LastID;
										document.getElementById("ArabicName").value = '';
										document.getElementById("EnglishName").value = '';
										document.getElementById("Active").checked = true;
										$("#ArabicName").focus().select();


									}

								},
								error: function (data) {
									dialog.modal('hide');
									toastr.error(data);
								}

							});
						}
					}
				});




			}


		});
		$(document).on('click', '#UpdateDrawnBank', function () {
			if ($("#ArabicName").val() == '') {
				bootbox.alert({
					message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.PleasefillalRequiredfields</h6>',
					className: 'rubberBand animated',
					buttons: {
						ok: {
							label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Ok</span>',
							className: 'btn-primary'
						}
					}
				});

			}
			else {
				bootbox.confirm({
					message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.AreYouSure</h6>',
					className: 'rubberBand animated',
					buttons: {
						confirm: {
							label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Yes</span>',
							className: 'btn-success'
						},
						cancel: {
							label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.No</span>',
							className: 'btn-danger'
						}
					},
					callback: function (result) {
						if (result) {
							var dialog = bootbox.dialog({
								title: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.PleaseWait...</h6>',
								message: '<p style="font-family: Verdana, Geneva, Tahoma, sans-serif"><i class="fa fa-spin fa-spinner"></i> @Resources.Resource.Updating...</p>',
								closeButton: false
							});

							var dataToSave = {

								BankID: $("#BankID").val(),
								ArabicName: $("#ArabicName").val(),
								EnglishName: $("#EnglishName").val(),
								Active: $("#Active:checked").val()

							};


							$.ajax({
								type: "POST",
								url: "/DrawnBank/UpdateDrawnBank",
								data: JSON.stringify(dataToSave),
								contentType: 'application/json',
								success: function (data) {

									dialog.modal('hide');
									if (data.Code == 0) {
										toastr.error(data.Msg);
									}
									else if (data.Code == 1) {

										toastr.success(data.Msg);

										tabelMemRef.ajax.reload();
										$('#modal-container').modal('hide');
										dialog.modal('hide');
										document.getElementById("Close").click();
									}

								},
								error: function (data) {
									dialog.modal('hide');
									toastr.error(data);
								}

							});

						}
					}
				});




			}


		});
		if ('@Resources.Resource.CurLang' == 'Arb') {
			var tabelMemRef = $("#tdataTable").DataTable({
				"language": {
					"emptyTable": '@Resources.Resource.EmptyTable',
					"search": '@Resources.Resource.Search',
					"loadingRecords": '@Resources.Resource.LoadingRecords',
					"processing": '@Resources.Resource.Processing',
					"zeroRecords": '@Resources.Resource.ZeroRecords',
					"info": '@Resources.Resource.Info',
					"infoEmpty": '@Resources.Resource.InfoEmpty',
					"lengthMenu": '@Resources.Resource.LengthMenu',
					"infoFiltered": '@Resources.Resource.InfoFiltered',
					"paginate": {
						"previous": '@Resources.Resource.Previous',
						"next": '@Resources.Resource.Next',
						"first": '@Resources.Resource.First',
						"last": '@Resources.Resource.Last',
					},
					"aria": {
						"sortAscending": '@Resources.Resource.SortAscending',
						"sortDescending": '@Resources.Resource.SortDescending'
					}
				},
				"scrollY": "500px",
				"scrollX": true,
				"ordering": false,
				"autoWidth": false,
				"paging": false,
				"columnDefs": [
					{ "width": "50px", "targets": 0, "className": "dt-center" },
					{ "targets": 1, "className": "dt-center" },
					{ "width": "50px", "targets": 2, "className": "dt-center" },
					{ "width": "50px", "targets": 3, "className": "dt-center" }
				],

				dom: 'Bfrtip',
				buttons: [

					{
						messageTop: '@Resources.Resource.DrawnBankName',
						extend: 'excelHtml5',
						exportOptions: {
							columns: [0, 1, 2]
						}
					}

				],

				ajax: {
					url: "/DrawnBank/GetAllDrawnBank",
					dataSrc: ""
				},
				columns: [
					{

						data: "BankID"
					},

					{
						data: "ArabicName"

					},
					{
						data: "Active"

					},
					{
						data: "BankID",
						render: function (data) {
							return "<a  class='btn btn-success btn-icon-anim btn-square js-Pop btn-sm' href='/DrawnBank/UpdateDrawnBank/" + data + "'><i class='fa fa-edit' style='margin-top: 4px;'></i> </a>";

						}

					}

				]


			});
		}
		else {
			var tabelMemRef = $("#tdataTable").DataTable({
				"language": {
					"emptyTable": '@Resources.Resource.EmptyTable',
					"search": '@Resources.Resource.Search',
					"loadingRecords": '@Resources.Resource.LoadingRecords',
					"processing": '@Resources.Resource.Processing',
					"zeroRecords": '@Resources.Resource.ZeroRecords',
					"info": '@Resources.Resource.Info',
					"infoEmpty": '@Resources.Resource.InfoEmpty',
					"lengthMenu": '@Resources.Resource.LengthMenu',
					"infoFiltered": '@Resources.Resource.InfoFiltered',
					"paginate": {
						"previous": '@Resources.Resource.Previous',
						"next": '@Resources.Resource.Next',
						"first": '@Resources.Resource.First',
						"last": '@Resources.Resource.Last',
					},
					"aria": {
						"sortAscending": '@Resources.Resource.SortAscending',
						"sortDescending": '@Resources.Resource.SortDescending'
					}
				},
				"scrollX": true,
				"ordering": false,
				"autoWidth": false,
				"paging": false,
				"columnDefs": [
					{ "width": "50px", "targets": 0, "className": "dt-center" },
					{ "targets": 1, "className": "dt-center" },
					{ "width": "50px", "targets": 2, "className": "dt-center" },
					{ "width": "50px", "targets": 3, "className": "dt-center" }
				],

				dom: 'Bfrtip',
				buttons: [

					{
						messageTop: '@Resources.Resource.DrawnBankName',
						extend: 'excelHtml5',
						exportOptions: {
							columns: [0, 1, 2]
						}
					}

				],

				ajax: {
					url: "/DrawnBank/GetAllDrawnBank",
					dataSrc: ""
				},
				columns: [
					{

						data: "BankID"
					},

					{
						data: "EnglishName"

					},
					{
						data: "Active"

					},
					{
						data: "BankID",
						render: function (data) {
							if ("@(User.IsInRole("UpdateBankswithdrawnfrom") || User.IsInRole("CoOwner"))" == "True") {
								return "<a  class='btn btn-success btn-icon-anim btn-square js-Pop btn-sm' href='/DrawnBank/UpdateDrawnBank/" + data + "'><i class='fa fa-edit' style='margin-top: 4px;'></i> </a>";

							}
							else {
								return "";
							}


						}

					}

				]


			});
		}

		$('#tdataTable').on('click', '.modal-close-btn', function () {
			$('#modal-container').modal('hide');
		});
		$(document).on('click', '.js-Pop', function (e) {
			$('#modal-container').removeData('bs.modal');
			e.preventDefault();
			$(this).attr('data-target', '#modal-container');
			$(this).attr('data-toggle', 'modal');

		});
		$('#modal-container').on('hidden.bs.modal', function () {
			$(this).removeData('bs.modal');

		});
		$('#CancelModal').on('click', function () {

			return false;
		});
		if ("@(User.IsInRole("UpdateBankswithdrawnfrom") || User.IsInRole("CoOwner"))" == "False") {
            var column = tabelMemRef.column(3);

            // Toggle the visibility
            column.visible(!column.visible());

        }
		 });
</script>
}



