@model Acc.ViewModels.AssetFilterVM
@{
    ViewBag.Title = @Resources.Resource.AssetMaintenanceReport;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .panel-body {
        font-family: Verdana, Geneva, Tahoma, sans-serif
    }

    .panel-footer {
        font-family: Verdana, Geneva, Tahoma, sans-serif
    }

    .panel-title {
        font-family: Verdana, Geneva, Tahoma, sans-serif
    }

    .dt-button {
        display: none !important;
    }

    #MemberShipTypeBody1 {
        font-family: Verdana, Geneva, Tahoma, sans-serif
    }
</style>
<script>
    function GetAsset(data) {
        if (data.AssetID != null && data.AssetID != '') {
            document.getElementById("AssetID").value = data.AssetID;
        }
        else {
            document.getElementById("AssetID").value = '';
        }
    }
</script>
<div class="panel card-view">
    <div class="panel-heading" style="background-color: #34495E">
        <div class="pull-left">
            <h6 class="panel-title txt-light" style="font-weight:bold">@Resources.Resource.AssetMaintenanceReport</h6>
        </div>
        <div class="clearfix"></div>
    </div>
    <div class="panel-body">
        <div class="col-lg-12">
            <div class="col-lg-3">
                <div class="form-group">
                    @Html.LabelFor(m => m.AssetTypeID)
                    @Html.DropDownListFor(m => m.AssetTypeID, new SelectList(Model.AssetType, "AssetTypeID", "Name"), Resources.Resource.AssetType, new { @id = "AssetTypeID", @class = "form-control input-sml" })
                </div>
            </div>
            <div class="col-lg-3">
                <div class="form-group">
                    @Html.LabelFor(m => m.FromDate)
                    @Html.TextBoxFor(model => model.FromDate, new { @id = "FromDate", @class = "form-control input-sml", @Value = Model.FromDate.ToString("dd/MM/yyyy") })
                </div>
            </div>
            <div class="col-lg-3">
                <div class="form-group">
                    @Html.LabelFor(m => m.ToDate)
                    @Html.TextBoxFor(model => model.ToDate, new { @id = "ToDate", @class = "form-control input-sml", @Value = Model.ToDate.ToString("dd/MM/yyyy") })
                </div>
            </div>
            <div class="col-lg-3">
                <div class="form-group">
                    @Html.Label(Resources.Resource.AssetID)
                    <div class="form-group  input-group">
                        @Html.TextBoxFor(m => m.AssetID, new { @id = "AssetID", @class = "form-control input-sml", @readonly = "readonly" })
                        <span class="input-group-btn">
                            <button class="btn btn-default btn-icon-anim btn-square" type="button" id="BtnAsset">
                                <i class="fa fa-search"></i>
                            </button>
                        </span>
                        <span class="input-group-btn">
                            <button class="btn btn-danger btn-icon-anim btn-square" type="button" id="BtnClearAsset">
                                <i class="fa fa-minus-square"></i>
                            </button>
                        </span>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-12">
            <button type="submit" class="btn btn-anim btnSearch" id="reload"><i class=" fa fa-search"></i><span class="btn-text">@Resources.Resource.Search</span></button>
            @if (User.IsInRole("PrintRepMaintenanceAssetPrintReport") || User.IsInRole("CoOwner"))
            {
                <button type="submit" class="btn btn-warning btn-anim" id="PrintPDF"><i class=" fa fa-print"></i><span class="btn-text">@Resources.Resource.Print</span></button>
            }
            <button type="submit" class="btn btn-anim btnFav" id="AddToFav"><i class=" fa fa-star"></i><span class="btn-text">@Resources.Resource.AddToFav</span></button>
            <button type="button" class="btn btn-default btn-anim" id="CloseForm"><i class="fa fa-times"></i><span class="btn-text">@Resources.Resource.Close</span></button>
        </div>
        <div class="col-lg-12" style="margin-top : 10px">
            <div class="form-group">
                <table id="tdataTable" class="table table-hover table-bordered mb-0" width="100%">
                    <thead>
                        <tr>
                            <th>@Resources.Resource.AssetType</th>
                            <th>@Resources.Resource.AssetID</th>
                            <th>@Resources.Resource.AssetName</th>
                            <th>@Resources.Resource.TransNo</th>
                            <th>@Resources.Resource.TransDate</th>
                            <th>@Resources.Resource.MaintenancKind</th>
                            <th>@Resources.Resource.PayValue</th>
                            <th>@Resources.Resource.Warrantyuntildate</th>
                            <th>@Resources.Resource.MaintenanceNo</th>
                            <th>@Resources.Resource.MaintenanceVoucherNo</th>
                            <th>@Resources.Resource.MaintenanceVoucherDate</th>
                            <th>@Resources.Resource.Note</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <div class="panel-footer">

    </div>
</div>

<div id="modal-container" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-content">
    </div>
</div>

@Html.TextBoxFor(m => m.TheDecimalPointForTheLocalCurrency, new { @id = "TheDecimalPointForTheLocalCurrency", @style = "visibility : hidden;" })
@Html.TextBoxFor(m => m.TheDecimalPointForTheForeignCurrency, new { @id = "TheDecimalPointForTheForeignCurrency", @style = "visibility : hidden;" })
@section scripts{
    @Scripts.Render("~/bundles/jqueryval");
    <script>
        $(document).ready(function () {
            var TheDecimalPointForTheLocalCurrency = document.getElementById("TheDecimalPointForTheLocalCurrency").value;
            var TheDecimalPointForTheForeignCurrency = document.getElementById("TheDecimalPointForTheForeignCurrency").value;

            function formatMoney(amount, decimalCount, decimal = ".", thousands = ",") {
                try {
                    decimalCount = Math.abs(decimalCount);
                    decimalCount = isNaN(decimalCount) ? decimalCount : decimalCount;

                    const negativeSign = amount < 0 ? "-" : "";

                    let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();
                    let j = (i.length > 3) ? i.length % 3 : 0;

                    return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : "");
                } catch (e) {
                    console.log(e)
                }
            };


            function validatedate(dateString) {
                var dateformat = /(((0|1)[0-9]|2[0-9]|3[0-1])\/(0[1-9]|1[0-2])\/((19|20)\d\d))$/;
                if (dateString.match(dateformat)) {
                    var operator = dateString.split('/');
                    var datepart = [];
                    if (operator.length > 1) {
                        datepart = dateString.split('/');
                    }
                    var month = parseInt(datepart[1]);
                    var day = parseInt(datepart[0]);
                    var year = parseInt(datepart[2]);
                    var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
                    if (month == 1 || month > 2) {
                        if (day > ListofDays[month - 1]) {
                            return false;
                        }
                    } else if (month == 2) {
                        var leapYear = false;
                        if ((year % 4 == 0) && ((!(year % 100 == 0)) || (year % 400 == 0))) {
                            leapYear = true;
                        }
                        if ((leapYear == false) && (day >= 29)) {
                            return false;
                        } else
                            if ((leapYear == true) && (day > 29)) {
                                return false;
                            }
                    }
                }
                else {
                    return false;
                }
                return true;
            }
            $(document).on('click', '#PrintPDF', function () {
              
                var FromDate = $("#FromDate").val();
                var ToDate = $("#ToDate").val();
                var AssetTypeID = $("#AssetTypeID").val();
                var AssetID = $("#AssetID").val();

                var words = FromDate.split('/');
                FromDate = words[0] + words[1] + words[2];
                words = ToDate.split('/');
                ToDate = words[0] + words[1] + words[2];

                if (AssetTypeID == '' || AssetTypeID == null) {
                    AssetTypeID = "0";
                }

                if (AssetID == '' || AssetID == null) {
                    AssetID = "0";
                }

                window.open('/PDFReport/GetAssetMaintenancePDF/' + FromDate + "/" + ToDate + "/" + AssetTypeID + "/" + AssetID + "/0", '_blank');

            });
            $(document).on('click', '#AddToFav', function () {
              
             
                bootbox.confirm({
                    message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.AreYouSure</h6>',
                    className: 'rubberBand animated',
                    buttons: {
                        confirm: {
                            label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Yes</span>',
                            className: 'btn-success'
                        },
                        cancel: {
                            label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.No</span>',
                            className: 'btn-danger'
                        }
                    },
                    callback: function (result) {
                        if (result) {
                            var dialog = bootbox.dialog({
                                title: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.PleaseWait...</h6>',
                                message: '<p style="font-family: Verdana, Geneva, Tahoma, sans-serif"><i class="fa fa-spin fa-spinner"></i> @Resources.Resource.Saving...</p>',
                                closeButton: false
                            });

                            var dataToSave = {

                                ScreenName: '@Resources.Resource.AssetMaintenanceReport',
                                ScreenUrl: "/Asset/MaintenanceAssetReport",
                                ScreenType: 1

                            };

                            $.ajax({
                                type: "POST",
                                url: "/FavScreen/AddToFave",
                                data: JSON.stringify(dataToSave),
                                contentType: 'application/json',
                                success: function (data) {

                                    dialog.modal('hide');
                                    if (data.Code == 0) {
                                        toastr.error(data.Msg);
                                    }
                                    else if (data.Code == 1) {
                                        toastr.success(data.Msg);
                                    }

                                },
                                error: function (data) {
                                    dialog.modal('hide');
                                    toastr.error(data);
                                }

                            });
                        }
                    }
                });


            });


            $(document).on('click', '#CloseForm', function () {
                window.location = "/Report/ReportDash";
            });
            $('#BtnAsset').on('click', function () {
                var dialog = bootbox.dialog({
                    title: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.PleaseWait...</h6>',
                    message: '<p style="font-family: Verdana, Geneva, Tahoma, sans-serif"><i class="fa fa-spin fa-spinner"></i> @Resources.Resource.PreparingData...</p>',
                    closeButton: false
                });
                var url = '/MultiUse/SearchAsset/GetAsset';
                $.get(url, function (data) {
                    $('#modal-container').html(data);
                    $('#modal-container').modal('show');
                    dialog.modal('hide');
                })
            });
            $('#BtnClearAsset').on('click', function () {
                document.getElementById("AssetID").value = '';
            });
            $("#FromDate").blur(function () {
                var dDate = document.getElementById("FromDate").value;
                if (!validatedate(dDate)) {
                    bootbox.alert({
                        message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.InvalidDate</h6>',
                        className: 'rubberBand animated',
                        buttons: {
                            ok: {
                                label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Ok</span>',
                                className: 'btn-primary'
                            }
                        }
                    });
                    document.getElementById("FromDate").value = '01/01/' + new Date().getFullYear()
                }
            });
            $("#ToDate").blur(function () {
                var dDate = document.getElementById("ToDate").value;
                if (!validatedate(dDate)) {
                    bootbox.alert({
                        message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.InvalidDate</h6>',
                        className: 'rubberBand animated',
                        buttons: {
                            ok: {
                                label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Ok</span>',
                                className: 'btn-primary'
                            }
                        }
                    });
                    document.getElementById("ToDate").value = '01/01/' + new Date().getFullYear()
                }
            });
            $("#FromDate").mask("99/99/9999");
            $("#ToDate").mask("99/99/9999");
            $("#FromDate").focus().select();
            $("#FromDate").keyup(function (event) {
                if (event.keyCode == 13) {
                    $("#ToDate").focus().select();
                }

            });
            $("#ToDate").keyup(function (event) {
                if (event.keyCode == 13) {
                    $("#FromDate").focus().select();
                }

            });
            $(document).on('click', '#reload', function () {
                var dDate = document.getElementById("FromDate").value;
                var dToDate = document.getElementById("ToDate").value;
                if (!validatedate(dDate)) {
                    bootbox.alert({
                        message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.InvalidDate</h6>',
                        className: 'rubberBand animated',
                        buttons: {
                            ok: {
                                label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Ok</span>',
                                className: 'btn-primary'
                            }
                        }
                    });
                }
                else if (!validatedate(dToDate)) {
                    bootbox.alert({
                        message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.InvalidDate</h6>',
                        className: 'rubberBand animated',
                        buttons: {
                            ok: {
                                label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Ok</span>',
                                className: 'btn-primary'
                            }
                        }
                    });
                }
                else {
                    var dialog = bootbox.dialog({
                        title: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.PleaseWait...</h6>',
                        message: '<p style="font-family: Verdana, Geneva, Tahoma, sans-serif"><i class="fa fa-spin fa-spinner"></i> @Resources.Resource.PreparingData...</p>',
                        closeButton: false
                    });
                    tabelMemRef.ajax.reload();
                    dialog.modal('hide');

                }
            });




            var tabelMemRef = $("#tdataTable").DataTable({
                "language": {
                    "emptyTable": '@Resources.Resource.EmptyTable',
                    "search": '@Resources.Resource.Search',
                    "loadingRecords": '@Resources.Resource.LoadingRecords',
                    "processing": '@Resources.Resource.Processing',
                    "zeroRecords": '@Resources.Resource.ZeroRecords',
                    "info": '@Resources.Resource.Info',
                    "infoEmpty": '@Resources.Resource.InfoEmpty',
                    "lengthMenu": '@Resources.Resource.LengthMenu',
                    "infoFiltered": '@Resources.Resource.InfoFiltered',
                    "paginate": {
                        "previous": '@Resources.Resource.Previous',
                        "next": '@Resources.Resource.Next',
                        "first": '@Resources.Resource.First',
                        "last": '@Resources.Resource.Last',
                    },
                    "aria": {
                        "sortAscending": '@Resources.Resource.SortAscending',
                        "sortDescending": '@Resources.Resource.SortDescending'
                    }
                },
                "scrollY": "500px",
                "scrollX": true,
                "ordering": false,
                "autoWidth": false,
                "paging": false,
                "searching": false,
                "columnDefs": [
                    {
                        "className": "dt-center",
                        "targets": "_all",
                        "orderable": false,

                    }],
                dom: 'Bfrtip',
                buttons: [

                ],
                ajax: {
                    "type": "POST",
                    url: "/Asset/GetAssetMaintenance",
                    "data": function (d) {
                        d.FromDate = $("#FromDate").val();
                        d.ToDate = $("#ToDate").val();
                        d.AssetTypeID = $("#AssetTypeID").val();
                        d.AssetID = $("#AssetID").val();
                    },

                    dataSrc: ""
                },
                columns: [
                    {

                        data: "AssetTypeName"
                    },

                    {
                        data: "AssetID"

                    },
                    {
                        data: "AssetName"

                    },
                    {
                        data: "Serial"

                    },
                    {
                        data: "TrDate",
                        render: function (data, type, r) {
                            return moment(data).format('DD/MM/YYYY')
                        }
                    },
                    {
                        data: "TrKind"

                    },
                    {
                        data: "PayValue",
                        render: function (data, type, r) {
                            return (formatMoney(data, TheDecimalPointForTheLocalCurrency))

                        }
                    },

                    {
                        data: "GrundToDate",
                        render: function (data, type, r) {
                            return moment(data).format('DD/MM/YYYY')
                        }
                    },

                    {
                        data: "MaintenanceNo"

                    },
                    {
                        data: "MaintenanceVoucherNo"
                    },
                    {
                        data: "VoucherDate",
                        render: function (data, type, r) {
                            return moment(data).format('DD/MM/YYYY')
                        }
                    },

                    {
                        data: "MaintenanceNote"

                    },
                ]
            });
            $('#tdataTable').on('click', '.modal-close-btn', function () {
                $('#modal-container').modal('hide');
            });
            $(document).on('click', '.js-Pop', function (e) {
                $('#modal-container').removeData('bs.modal');
                e.preventDefault();
                $(this).attr('data-target', '#modal-container');
                $(this).attr('data-toggle', 'modal');

            });
            $('#modal-container').on('hidden.bs.modal', function () {
                $(this).removeData('bs.modal');

            });
            $('#tdataTable').on('click', '.modal-close-btn', function () {
                $('#modal-containerAccount').modal('hide');
            });
            $('#modal-containerAccount').on('hidden.bs.modal', function () {
                $(this).removeData('bs.modal');

            });
            $('#CancelModal').on('click', function () {

                return false;
            });
        });
    </script>

}


