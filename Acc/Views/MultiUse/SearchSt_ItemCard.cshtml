@model Acc.ViewModels.St_WarehouseSearchVM
@{
    ViewBag.Title = @Resources.Resource.SearchItemCard;


}
    <link href="~/Content/jquery-ui.css" rel="stylesheet" />
<style>
    .modal-body {
        font-family: Verdana, Geneva, Tahoma, sans-serif
    }

    .modal-footer {
        font-family: Verdana, Geneva, Tahoma, sans-serif
    }

    .modal-title {
        font-family: Verdana, Geneva, Tahoma, sans-serif
    }

    .dt-button {
        display: none !important;
    }
</style>
<script>
    $("#ItemCode").focus().select();
    $("#ItemCode").keyup(function (event) {
        if (event.keyCode == 13)
            $("#ItemName").focus().select();

    });
    $("#ItemName").keyup(function (event) {
        if (event.keyCode == 13)
            $("#SearchSupplierAccountNumber").focus().select();

    });
    $("#SearchSupplierAccountNumber").keyup(function (event) {
        if (event.keyCode == 13)
            $("#ItemCode").focus().select();

    });
    $('#BtnClearSearchSupplier').on('click', function () {
        document.getElementById("SearchSupplierAccountNumber").value = '';
        document.getElementById("SearchSupplierAccountName").value = '';
    });
    var SearchSupplierAccNumber = [];
    $.getJSON('@Url.Action("GetAcountAcc", "MultiUse")', { id: 0 }, function (Data) {
        SearchSupplierAccNumber = [];
            for (var i = 0, len = Data.length; i < len; i++) {
                var r = { label: Data[i].AccountName, value: Data[i].AccountNumber};
                SearchSupplierAccNumber.push(r);
            }
    });
    $(function () {
        $("#SearchSupplierAccountNumber").autocomplete({
            source: SearchSupplierAccNumber,
            select: function (event, ui) {
                document.getElementById("SearchSupplierAccountNumber").value = ui.item.value;
                document.getElementById("SearchSupplierAccountName").value = ui.item.label;
            }
        });
    });
</script>
<div id="myModal" class="modal fade in" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="display: block;">
    <div class="modal-dialog modal-lg" style="width : 90%">
        <div class="modal-content">
            <div class="modal-header" style="background-color: #34495E">
                <div class="pull-left">
                    <h6 class="modal-title txt-light" style="font-weight:bold">@Resources.Resource.SearchItemCard</h6>
                </div>
                <div class="clearfix"></div>
            </div>
            <div class="modal-body">
                <div class="col-lg-12">
                    <div class="col-lg-2">
                        @Html.Label(Resources.Resource.ItemCode)
                        <div class="form-group ">
                            @Html.TextBoxFor(m => m.ItemCode, new { @id = "ItemCode", @class = "form-control input-sml" })
                        </div>
                    </div>
                    <div class="col-lg-2">
                        <div class="form-group">
                            @Html.Label(@Resources.Resource.CountryOfOrigin)
                            @if (Resources.Resource.CurLang == "Arb")
                            {
                                @Html.DropDownListFor(m => m.CountryOfOriginNo, new SelectList(Model.St_CountryOfOrigin, "CountryOfOriginID", "ArabicName"), Resources.Resource.CountryOfOrigin, new { @id = "CountryOfOriginNo", @class = "form-control input-sml" })

                            }
                            else
                            {
                                @Html.DropDownListFor(m => m.CountryOfOriginNo, new SelectList(Model.St_CountryOfOrigin, "CountryOfOriginID", "EnglishName"), Resources.Resource.CountryOfOrigin, new { @id = "CountryOfOriginNo", @class = "form-control input-sml" })
                            }
                        </div>
                    </div>
                    <div class="col-lg-2">
                        <div class="form-group">
                            @Html.ValueFor(m => m.Categorie_2Name)
                            @if (Resources.Resource.CurLang == "Arb")
                            {
                                @Html.DropDownListFor(m => m.Categorie_2, new SelectList(Model.St_DescriptionDetail2, "DescriptionDetailID", "ArabicName"), "", new { @id = "Categorie_2", @class = "form-control input-sml" })

                            }
                            else
                            {
                                @Html.DropDownListFor(m => m.Categorie_2, new SelectList(Model.St_DescriptionDetail2, "DescriptionDetailID", "EnglishName"), "", new { @id = "Categorie_2", @class = "form-control input-sml" })
                            }
                        </div>
                    </div>
                    <div class="col-lg-2">
                        <div class="form-group">
                            @Html.ValueFor(m => m.Categorie_6Name)
                            @if (Resources.Resource.CurLang == "Arb")
                            {
                                @Html.DropDownListFor(m => m.Categorie_6, new SelectList(Model.St_DescriptionDetail6, "DescriptionDetailID", "ArabicName"), "", new { @id = "Categorie_6", @class = "form-control input-sml" })

                            }
                            else
                            {
                                @Html.DropDownListFor(m => m.Categorie_6, new SelectList(Model.St_DescriptionDetail6, "DescriptionDetailID", "EnglishName"), "", new { @id = "Categorie_6", @class = "form-control input-sml" })
                            }
                        </div>
                    </div>
                    <div class="col-lg-2">
                        <div class="form-group">
                            @Html.ValueFor(m => m.Categorie_10Name)
                            @if (Resources.Resource.CurLang == "Arb")
                            {
                                @Html.DropDownListFor(m => m.Categorie_10, new SelectList(Model.St_DescriptionDetail10, "DescriptionDetailID", "ArabicName"), "", new { @id = "Categorie_10", @class = "form-control input-sml" })

                            }
                            else
                            {
                                @Html.DropDownListFor(m => m.Categorie_10, new SelectList(Model.St_DescriptionDetail10, "DescriptionDetailID", "EnglishName"), "", new { @id = "Categorie_10", @class = "form-control input-sml" })
                            }
                        </div>
                    </div>
                    <div class="col-lg-2">
                        <div class="form-group">
                            @Html.ValueFor(m => m.Categorie_14Name)
                            @if (Resources.Resource.CurLang == "Arb")
                            {
                                @Html.DropDownListFor(m => m.Categorie_14, new SelectList(Model.St_DescriptionDetail14, "DescriptionDetailID", "ArabicName"), "", new { @id = "Categorie_14", @class = "form-control input-sml" })

                            }
                            else
                            {
                                @Html.DropDownListFor(m => m.Categorie_14, new SelectList(Model.St_DescriptionDetail14, "DescriptionDetailID", "EnglishName"), "", new { @id = "Categorie_14", @class = "form-control input-sml" })
                            }
                        </div>
                    </div>
                </div>
                <div class="col-lg-12">
                    <div class="col-lg-2">
                        @Html.Label(Resources.Resource.ItemName)
                        <div class="form-group">
                            @Html.TextBoxFor(m => m.ItemName, new { @id = "ItemName", @class = "form-control input-sml" })
                        </div>
                    </div>
                    <div class="col-lg-2">
                        <div class="form-group">
                            @Html.Label(@Resources.Resource.ManufacturerCompanies)
                            @if (Resources.Resource.CurLang == "Arb")
                            {
                                @Html.DropDownListFor(m => m.ManufacturerCompanyNo, new SelectList(Model.St_ManufacturerCompany, "ManufacturerCompanyID", "ArabicName"), Resources.Resource.ManufacturerCompanies, new { @id = "ManufacturerCompanyNo", @class = "form-control input-sml" })

                            }
                            else
                            {
                                @Html.DropDownListFor(m => m.ManufacturerCompanyNo, new SelectList(Model.St_ManufacturerCompany, "ManufacturerCompanyID", "EnglishName"), Resources.Resource.ManufacturerCompanies, new { @id = "ManufacturerCompanyNo", @class = "form-control input-sml" })
                            }
                        </div>
                    </div>
                    <div class="col-lg-2">
                        <div class="form-group">
                            @Html.ValueFor(m => m.Categorie_3Name)
                            @if (Resources.Resource.CurLang == "Arb")
                            {
                                @Html.DropDownListFor(m => m.Categorie_3, new SelectList(Model.St_DescriptionDetail3, "DescriptionDetailID", "ArabicName"), "", new { @id = "Categorie_3", @class = "form-control input-sml" })

                            }
                            else
                            {
                                @Html.DropDownListFor(m => m.Categorie_3, new SelectList(Model.St_DescriptionDetail3, "DescriptionDetailID", "EnglishName"), "", new { @id = "Categorie_3", @class = "form-control input-sml" })
                            }
                        </div>
                    </div>
                    <div class="col-lg-2">
                        <div class="form-group">
                            @Html.ValueFor(m => m.Categorie_7Name)
                            @if (Resources.Resource.CurLang == "Arb")
                            {
                                @Html.DropDownListFor(m => m.Categorie_7, new SelectList(Model.St_DescriptionDetail7, "DescriptionDetailID", "ArabicName"), "", new { @id = "Categorie_7", @class = "form-control input-sml" })

                            }
                            else
                            {
                                @Html.DropDownListFor(m => m.Categorie_7, new SelectList(Model.St_DescriptionDetail7, "DescriptionDetailID", "EnglishName"), "", new { @id = "Categorie_7", @class = "form-control input-sml" })
                            }
                        </div>
                    </div>
                    <div class="col-lg-2">
                        <div class="form-group">
                            @Html.ValueFor(m => m.Categorie_11Name)
                            @if (Resources.Resource.CurLang == "Arb")
                            {
                                @Html.DropDownListFor(m => m.Categorie_11, new SelectList(Model.St_DescriptionDetail11, "DescriptionDetailID", "ArabicName"), "", new { @id = "Categorie_11", @class = "form-control input-sml" })

                            }
                            else
                            {
                                @Html.DropDownListFor(m => m.Categorie_11, new SelectList(Model.St_DescriptionDetail11, "DescriptionDetailID", "EnglishName"), "", new { @id = "Categorie_11", @class = "form-control input-sml" })
                            }
                        </div>
                    </div>
                    <div class="col-lg-2">
                        <div class="form-group">
                            @Html.ValueFor(m => m.Categorie_15Name)
                            @if (Resources.Resource.CurLang == "Arb")
                            {
                                @Html.DropDownListFor(m => m.Categorie_15, new SelectList(Model.St_DescriptionDetail15, "DescriptionDetailID", "ArabicName"), "", new { @id = "Categorie_15", @class = "form-control input-sml" })

                            }
                            else
                            {
                                @Html.DropDownListFor(m => m.Categorie_15, new SelectList(Model.St_DescriptionDetail15, "DescriptionDetailID", "EnglishName"), "", new { @id = "Categorie_15", @class = "form-control input-sml" })
                            }
                        </div>
                    </div>
                </div>
                <div class="col-lg-12">
                    <div class="col-lg-2">
                        <div class="form-group">
                            @Html.Label(@Resources.Resource.ItemUnits)
                            @if (Resources.Resource.CurLang == "Arb")
                            {
                                @Html.DropDownListFor(m => m.ItemUnitNo, new SelectList(Model.St_ItemUnit, "ItemUnitCode", "ArabicName"), Resources.Resource.ItemUnits, new { @id = "ItemUnitNo", @class = "form-control input-sml" })

                            }
                            else
                            {
                                @Html.DropDownListFor(m => m.ItemUnitNo, new SelectList(Model.St_ItemUnit, "ItemUnitCode", "EnglishName"), Resources.Resource.ItemUnits, new { @id = "ItemUnitNo", @class = "form-control input-sml" })
                            }
                        </div>
                    </div>
                    <div class="col-lg-2">
                        <div class="form-group">
                            @Html.Label(Resources.Resource.ItemCase)
                            @Html.DropDownListFor(m => m.ItemCaseInt, new List<SelectListItem>
                                {
                                new SelectListItem{ Text=Resources.Resource.ItemCase, Value = "0",Selected=true },
                                new SelectListItem{ Text=Resources.Resource.Active, Value = "1",Selected=false },
                                new SelectListItem{ Text=Resources.Resource. Stopped, Value = "2",Selected=false }
                            }, new { @id = "ItemCaseInt", @class = "form-control input-sml" })
                        </div>
                    </div>
                    <div class="col-lg-2">
                        <div class="form-group">
                            @Html.ValueFor(m => m.Categorie_4Name)
                            @if (Resources.Resource.CurLang == "Arb")
                            {
                                @Html.DropDownListFor(m => m.Categorie_4, new SelectList(Model.St_DescriptionDetail4, "DescriptionDetailID", "ArabicName"), "", new { @id = "Categorie_4", @class = "form-control input-sml" })

                            }
                            else
                            {
                                @Html.DropDownListFor(m => m.Categorie_4, new SelectList(Model.St_DescriptionDetail4, "DescriptionDetailID", "EnglishName"), "", new { @id = "Categorie_4", @class = "form-control input-sml" })
                            }
                        </div>
                    </div>
                    <div class="col-lg-2">
                        <div class="form-group">
                            @Html.ValueFor(m => m.Categorie_8Name)
                            @if (Resources.Resource.CurLang == "Arb")
                            {
                                @Html.DropDownListFor(m => m.Categorie_8, new SelectList(Model.St_DescriptionDetail8, "DescriptionDetailID", "ArabicName"), "", new { @id = "Categorie_8", @class = "form-control input-sml" })

                            }
                            else
                            {
                                @Html.DropDownListFor(m => m.Categorie_8, new SelectList(Model.St_DescriptionDetail8, "DescriptionDetailID", "EnglishName"), "", new { @id = "Categorie_8", @class = "form-control input-sml" })
                            }
                        </div>
                    </div>
                    <div class="col-lg-2">
                        <div class="form-group">
                            @Html.ValueFor(m => m.Categorie_12Name)
                            @if (Resources.Resource.CurLang == "Arb")
                            {
                                @Html.DropDownListFor(m => m.Categorie_12, new SelectList(Model.St_DescriptionDetail12, "DescriptionDetailID", "ArabicName"), "", new { @id = "Categorie_12", @class = "form-control input-sml" })

                            }
                            else
                            {
                                @Html.DropDownListFor(m => m.Categorie_12, new SelectList(Model.St_DescriptionDetail12, "DescriptionDetailID", "EnglishName"), "", new { @id = "Categorie_12", @class = "form-control input-sml" })
                            }
                        </div>
                    </div>
                </div>
                <div class="col-lg-12">
                    <div class="col-lg-2">
                        <div class="form-group">
                            @Html.Label(Resources.Resource.ItemNature)
                            @Html.DropDownListFor(m => m.ItemNatureNo, new List<SelectListItem>
                                {
                                new SelectListItem{ Text=Resources.Resource.ItemNature, Value = "0",Selected=true },
                                new SelectListItem{ Text=Resources.Resource.ForeignImport, Value = "1",Selected=false },
                                new SelectListItem{ Text=Resources.Resource. LocalImport, Value = "2",Selected=false },
                                new SelectListItem{ Text=Resources.Resource. Manufacturing, Value = "3",Selected=false }
                            }, new { @id = "ItemNatureNo", @class = "form-control input-sml" })
                        </div>
                    </div>
                    <div class="col-lg-2">
                        <div class="form-group">
                            @Html.ValueFor(m => m.Categorie_1Name)
                            @if (Resources.Resource.CurLang == "Arb")
                            {
                                @Html.DropDownListFor(m => m.Categorie_1, new SelectList(Model.St_DescriptionDetail1, "DescriptionDetailID", "ArabicName"), "", new { @id = "Categorie_1", @class = "form-control input-sml" })

                            }
                            else
                            {
                                @Html.DropDownListFor(m => m.Categorie_1, new SelectList(Model.St_DescriptionDetail1, "DescriptionDetailID", "EnglishName"), "", new { @id = "Categorie_1", @class = "form-control input-sml" })
                            }
                        </div>
                    </div>
                    <div class="col-lg-2">
                        <div class="form-group">
                            @Html.ValueFor(m => m.Categorie_5Name)
                            @if (Resources.Resource.CurLang == "Arb")
                            {
                                @Html.DropDownListFor(m => m.Categorie_5, new SelectList(Model.St_DescriptionDetail5, "DescriptionDetailID", "ArabicName"), "", new { @id = "Categorie_5", @class = "form-control input-sml" })

                            }
                            else
                            {
                                @Html.DropDownListFor(m => m.Categorie_5, new SelectList(Model.St_DescriptionDetail5, "DescriptionDetailID", "EnglishName"), "", new { @id = "Categorie_5", @class = "form-control input-sml" })
                            }
                        </div>
                    </div>
                    <div class="col-lg-2">
                        <div class="form-group">
                            @Html.ValueFor(m => m.Categorie_9Name)
                            @if (Resources.Resource.CurLang == "Arb")
                            {
                                @Html.DropDownListFor(m => m.Categorie_9, new SelectList(Model.St_DescriptionDetail9, "DescriptionDetailID", "ArabicName"), "", new { @id = "Categorie_9", @class = "form-control input-sml" })

                            }
                            else
                            {
                                @Html.DropDownListFor(m => m.Categorie_9, new SelectList(Model.St_DescriptionDetail9, "DescriptionDetailID", "EnglishName"), "", new { @id = "Categorie_9", @class = "form-control input-sml" })
                            }
                        </div>
                    </div>
                    <div class="col-lg-2">
                        <div class="form-group">
                            @Html.ValueFor(m => m.Categorie_13Name)
                            @if (Resources.Resource.CurLang == "Arb")
                            {
                                @Html.DropDownListFor(m => m.Categorie_13, new SelectList(Model.St_DescriptionDetail13, "DescriptionDetailID", "ArabicName"), "", new { @id = "Categorie_13", @class = "form-control input-sml" })

                            }
                            else
                            {
                                @Html.DropDownListFor(m => m.Categorie_13, new SelectList(Model.St_DescriptionDetail13, "DescriptionDetailID", "EnglishName"), "", new { @id = "Categorie_13", @class = "form-control input-sml" })
                            }
                        </div>
                    </div>
                </div>
                <div class="col-lg-12">
                    <div class="col-lg-3">
                        <div class="form-group">
                            @Html.Label(Resources.Resource.SupplierAccountNo)
                            <div class="form-group">
                                @Html.TextBoxFor(m => m.SearchSupplierAccountName, new { @id = "SearchSupplierAccountNumber", @class = "form-control input-sml"})
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="form-group">
                            @Html.Label(Resources.Resource.SupplierAccountName)
                            <div class="form-group input-group">
                                @Html.TextBoxFor(m => m.SearchSupplierAccountName, new { @id = "SearchSupplierAccountName", @class = "form-control input-sml", @readonly = "readonly" })
                                <span class="input-group-btn">
                                    <button class="btn btn-danger btn-icon-anim btn-square" type="button" id="BtnClearSearchSupplier">
                                        <i class="fa fa-minus-square"></i>
                                    </button>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-12">
                    <a class="btn btn btn-anim btnSearch" id="btnSearch"> <i class="fa fa-search"></i><span class="btn-text">@Resources.Resource.Search</span></a>
                    <button type="button" class="btn btn-default btn-anim" data-dismiss="modal" id="btnClose"><i class="fa fa-times"></i><span class="btn-text">@Resources.Resource.Close</span></button>
                </div>
                <div class="col-lg-12">
                    <table id="tdataTableDetail" class="table table-bordered" style="width:100%;cursor:pointer">
                        <thead>
                            <tr>
                                <th>@Resources.Resource.ItemCode</th>
                                <th>@Resources.Resource.ItemName</th>
                                <th>@Resources.Resource.SupplierAccountName</th>
                                <th>@Resources.Resource.Unit</th>
                                <th>@Resources.Resource.SalePrice</th>
                                <th>@Resources.Resource.ItemNature</th>
                                <th>@Resources.Resource.ItemCase</th>
                                <th>@Resources.Resource.StopItem</th>
                                <th>@Resources.Resource.CostRate</th>
                                <th>@Resources.Resource.CountryOfOrigin</th>
                                <th>@Resources.Resource.ManufacturerCompanies</th>
                                <th>@Resources.Resource.TaxRate</th>
                                <th>@Resources.Resource.LastPurchasePrice</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                
            </div>
        </div>
    </div>
</div>
@Html.TextBoxFor(m => m.TheDecimalPointForTheLocalCurrency, new { @id = "TheDecimalPointForTheLocalCurrency", @style = "visibility : hidden;" })
<script>
    $(document).ready(function () {
        var TheDecimalPointForTheLocalCurrency = document.getElementById("TheDecimalPointForTheLocalCurrency").value;
        if (TheDecimalPointForTheLocalCurrency == '' || TheDecimalPointForTheLocalCurrency == null) {
            TheDecimalPointForTheLocalCurrency = 3;
        }
        function formatMoneyLocalCurrencyFraction(number, decPlaces, decSep, thouSep) {
            decPlaces = isNaN(decPlaces = Math.abs(decPlaces)) ? TheDecimalPointForTheLocalCurrency : decPlaces,
                decSep = typeof decSep === "undefined" ? "." : decSep;
            thouSep = typeof thouSep === "undefined" ? "," : thouSep;
            var sign = number < 0 ? "-" : "";
            var i = String(parseInt(number = Math.abs(Number(number) || 0).toFixed(decPlaces)));
            var j = (j = i.length) > 3 ? j % 3 : 0;

            return sign +
                (j ? i.substr(0, j) + thouSep : "") +
                i.substr(j).replace(/(\decSep{3})(?=\decSep)/g, "$1" + thouSep) +
                (decPlaces ? decSep + Math.abs(number - i).toFixed(decPlaces).slice(2) : "");
        }
        var tabelMemRefDetail = $("#tdataTableDetail").DataTable({
            "language": {
                "emptyTable": '@Resources.Resource.EmptyTable',
                "search": '@Resources.Resource.Search',
                "loadingRecords": '@Resources.Resource.LoadingRecords',
                "processing": '@Resources.Resource.Processing',
                "zeroRecords": '@Resources.Resource.ZeroRecords',
                "info": '@Resources.Resource.Info',
                "infoEmpty": '@Resources.Resource.InfoEmpty',
                "lengthMenu": '@Resources.Resource.LengthMenu',
                "infoFiltered": '@Resources.Resource.InfoFiltered',
                "paginate": {
                    "previous": '@Resources.Resource.Previous',
                    "next": '@Resources.Resource.Next',
                    "first": '@Resources.Resource.First',
                    "last": '@Resources.Resource.Last',
                },
                "aria": {
                    "sortAscending": '@Resources.Resource.SortAscending',
                    "sortDescending": '@Resources.Resource.SortDescending'
                }
            },
            "scrollY": "400px",
            "scrollX": true,
            "scrollCollapse": true,
            "paging": false,
            "ordering": false,
            "info": false,
            "columnDefs": [
                {
                    "targets": [0],
                    "className": "dt-center"
                },
                {
                    "targets": [1],
                    "className": "dt-center"
                },
                {
                    "targets": [2],
                    "className": "dt-center"
                },
                {
                    "targets": [3],
                    "className": "dt-center"
                },
                {
                    "targets": [4],
                    "className": "dt-center"
                },
                {
                    "targets": [5],
                    "className": "dt-center"
                },
                {
                    "targets": [6],
                    "className": "dt-center"
                },
                {
                    "targets": [7],
                    "visible": false,
                    "searchable": false
                },
                {
                    "targets": [8],
                    "visible": false,
                    "searchable": false
                },
                {
                    "targets": [9],
                    "visible": false,
                    "searchable": false
                },
                {
                    "targets": [10],
                    "visible": false,
                    "searchable": false
                },
                {
                    "targets": [11],
                    "visible": false,
                    "searchable": false
                },
                {
                    "targets": [12],
                    "visible": false,
                    "searchable": false
                }
            ],

            dom: 'Bfrtip',

            buttons: [


            ],


            ajax: {
                url: "/MultiUse/GetAllSt_ItemCard/",
                "type": "POST",
                "data": function (d) {
                    d.id = 0;
                    d.ItemCode = $("#ItemCode").val();
                    d.ItemName = $("#ItemName").val();
                    d.GroupCode = $("#ItemUnitNo").val();
                    d.ItemCaseInt = $("#ItemCaseInt").val();
                    d.ItemNatureNo = $("#ItemNatureNo").val();
                    d.CountryOfOriginNo = $("#CountryOfOriginNo").val();
                    d.ManufacturerCompanyNo = $("#ManufacturerCompanyNo").val();
                    d.SearchSupplierAccountNumber = $("#SearchSupplierAccountNumber").val();
                    d.Categorie_1 = $("#Categorie_1").val();
                    d.Categorie_2 = $("#Categorie_2").val();
                    d.Categorie_3 = $("#Categorie_3").val();
                    d.Categorie_4 = $("#Categorie_4").val();
                    d.Categorie_5 = $("#Categorie_5").val();
                    d.Categorie_6 = $("#Categorie_6").val();
                    d.Categorie_7 = $("#Categorie_7").val();
                    d.Categorie_8 = $("#Categorie_8").val();
                    d.Categorie_9 = $("#Categorie_9").val();
                    d.Categorie_10 = $("#Categorie_10").val();
                    d.Categorie_11 = $("#Categorie_11").val();
                    d.Categorie_12 = $("#Categorie_12").val();
                    d.Categorie_13 = $("#Categorie_13").val();
                    d.Categorie_14 = $("#Categorie_14").val();
                    d.Categorie_15 = $("#Categorie_15").val();

                },
                dataSrc: ""
            },
            columns: [
                {

                    data: "ItemCode"
                },
                {
                    data: "ItemName"

                },
                {
                    data: "SearchSupplierAccountName"

                },
                {
                    data: "ItemUnitName"

                },
                {
                    data: "SalePrice",
                    render: function (data, type, r) {
                        return (formatMoneyLocalCurrencyFraction(data, TheDecimalPointForTheLocalCurrency))
                    }

                },
                {
                    data: "ItemNatureName"
                },
                {
                    data: "ItemCase"
                },
                {
                    data: "StopItem"

                },
                {
                    data: "CostRate",
                    render: function (data, type, r) {
                        return (formatMoneyLocalCurrencyFraction(data, TheDecimalPointForTheLocalCurrency))
                    }

                },
                {
                    data: "CountryOfOriginName"

                },
                {
                    data: "ManufacturerCompanyName"

                },
                {
                    data: "TaxRate"

                },
                {
                    data: "PurchasePrice",
                    render: function (data, type, r) {
                        return (formatMoneyLocalCurrencyFraction(data, TheDecimalPointForTheLocalCurrency))
                    }

                },

            ]
        });
        $(document).on('click', '#btnSearch', function () {
            var dialog = bootbox.dialog({
                title: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.PleaseWait...</h6>',
                message: '<p style="font-family: Verdana, Geneva, Tahoma, sans-serif"><i class="fa fa-spin fa-spinner"></i> @Resources.Resource.PreparingData...</p>',
                closeButton: false
            });
            $('#tdataTableDetail').DataTable().clear().draw();
            $('#tdataTableDetail').DataTable().ajax.reload();
            dialog.modal('hide');
        });
        $('#tdataTableDetail tbody').on('click', 'tr', function () {
            // alert('@(ViewBag.ID)');
            if ('@(ViewBag.ID)' == "ItemCode") {
                if (tabelMemRefDetail.row(this).data().StopItem == '0') {
                    GetSelectedItemCard(tabelMemRefDetail.row(this).data());
                    $('#btnClose').trigger('click');
                }
                else {
                    bootbox.alert({
                        message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.TheItemCardIsSuspended</h6>',
                        className: 'rubberBand animated',
                        buttons: {
                            ok: {
                                label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Ok</span>',
                                className: 'btn-primary'
                            }
                        }
                    });
                }
            }
            else if ('@(ViewBag.ID)' == "AlternativeItemCard") {
                if (tabelMemRefDetail.row(this).data().StopItem == '0') {
                    GetSelectedAlternativeItemCard(tabelMemRefDetail.row(this).data());
                    $('#btnClose').trigger('click');
                }
                else {
                    bootbox.alert({
                        message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.TheItemCardIsSuspended</h6>',
                        className: 'rubberBand animated',
                        buttons: {
                            ok: {
                                label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Ok</span>',
                                className: 'btn-primary'
                            }
                        }
                    });
                }
            }
            else if ('@(ViewBag.ID)' == "PurchaseOrderItemCode") {
                if (tabelMemRefDetail.row(this).data().StopItem == '0') {
                    GetSelectedPurchaseOrderItemCode(tabelMemRefDetail.row(this).data());
                    $('#btnClose').trigger('click');
                }
                else {
                    bootbox.alert({
                        message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.TheItemCardIsSuspended</h6>',
                        className: 'rubberBand animated',
                        buttons: {
                            ok: {
                                label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Ok</span>',
                                className: 'btn-primary'
                            }
                        }
                    });
                }
            }
            else if ('@(ViewBag.ID)' == "OfferPriceItemCode") {
                if (tabelMemRefDetail.row(this).data().StopItem == '0') {
                    GetSelectedOfferPriceItemCode(tabelMemRefDetail.row(this).data());
                    $('#btnClose').trigger('click');
                }
                else {
                    bootbox.alert({
                        message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.TheItemCardIsSuspended</h6>',
                        className: 'rubberBand animated',
                        buttons: {
                            ok: {
                                label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Ok</span>',
                                className: 'btn-primary'
                            }
                        }
                    });
                }
            }
            else if ('@(ViewBag.ID)' == "SaleOrderItemCode") {
                if (tabelMemRefDetail.row(this).data().StopItem == '0') {
                    GetSelectedSaleOrderItemCode(tabelMemRefDetail.row(this).data());
                    $('#btnClose').trigger('click');
                }
                else {
                    bootbox.alert({
                        message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.TheItemCardIsSuspended</h6>',
                        className: 'rubberBand animated',
                        buttons: {
                            ok: {
                                label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Ok</span>',
                                className: 'btn-primary'
                            }
                        }
                    });
                }
            }
            else if ('@(ViewBag.ID)' == "PurchaseVoucherItemCode") {
                if (tabelMemRefDetail.row(this).data().StopItem == '0') {
                    GetSelectedPurchaseVoucherItemCode(tabelMemRefDetail.row(this).data());
                    $('#btnClose').trigger('click');
                }
                else {
                    bootbox.alert({
                        message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.TheItemCardIsSuspended</h6>',
                        className: 'rubberBand animated',
                        buttons: {
                            ok: {
                                label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Ok</span>',
                                className: 'btn-primary'
                            }
                        }
                    });
                }
            }
            else if ('@(ViewBag.ID)' == "InVoucherItemCode") {
                if (tabelMemRefDetail.row(this).data().StopItem == '0') {
                    GetSelectedInVoucherItemCode(tabelMemRefDetail.row(this).data());
                    $('#btnClose').trigger('click');
                }
                else {
                    bootbox.alert({
                        message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.TheItemCardIsSuspended</h6>',
                        className: 'rubberBand animated',
                        buttons: {
                            ok: {
                                label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Ok</span>',
                                className: 'btn-primary'
                            }
                        }
                    });
                }
            }
            else if ('@(ViewBag.ID)' == "OutVoucherItemCode") {
                if (tabelMemRefDetail.row(this).data().StopItem == '0') {
                    GetSelectedOutVoucherItemCode(tabelMemRefDetail.row(this).data());
                    $('#btnClose').trigger('click');
                }
                else {
                    bootbox.alert({
                        message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.TheItemCardIsSuspended</h6>',
                        className: 'rubberBand animated',
                        buttons: {
                            ok: {
                                label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Ok</span>',
                                className: 'btn-primary'
                            }
                        }
                    });
                }
            }
            else if ('@(ViewBag.ID)' == "ReturnPurchaseVoucherItemCode") {
                if (tabelMemRefDetail.row(this).data().StopItem == '0') {
                    GetSelectedReturnPurchaseVoucherItemCode(tabelMemRefDetail.row(this).data());
                    $('#btnClose').trigger('click');
                }
                else {
                    bootbox.alert({
                        message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.TheItemCardIsSuspended</h6>',
                        className: 'rubberBand animated',
                        buttons: {
                            ok: {
                                label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Ok</span>',
                                className: 'btn-primary'
                            }
                        }
                    });
                }
            }
            else if ('@(ViewBag.ID)' == "SaleVoucherItemCode") {
                if (tabelMemRefDetail.row(this).data().StopItem == '0') {
                    GetSelectedSaleVoucherItemCode(tabelMemRefDetail.row(this).data());
                    $('#btnClose').trigger('click');
                }
                else {
                    bootbox.alert({
                        message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.TheItemCardIsSuspended</h6>',
                        className: 'rubberBand animated',
                        buttons: {
                            ok: {
                                label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Ok</span>',
                                className: 'btn-primary'
                            }
                        }
                    });
                }
            }
            else if ('@(ViewBag.ID)' == "SearchItemCode") {
                 GetSelectedItemCode(tabelMemRefDetail.row(this).data());
                    $('#btnClose').trigger('click');
            }
        });
        $("#SearchSupplierAccountNumber").blur(function () {
            var AccountNumber = document.getElementById("SearchSupplierAccountNumber").value;
            if (AccountNumber == '') {
                document.getElementById("SearchSupplierAccountName").value = '';
            }
            else {
                if (AccountNumber != null && AccountNumber != '') {
                    $.getJSON('@Url.Action("CheckAcountAcc", "MultiUse")', { id: AccountNumber }, function (Data) {
                        if (Data == "") {
                            bootbox.alert({
                                message: '<h6 style="font-family: Verdana, Geneva, Tahoma, sans-serif"> @Resources.Resource.TheAccountNumberDoesNotExist</h6>',
                                className: 'rubberBand animated',
                                buttons: {
                                    ok: {
                                        label: '<span style="font-family: Verdana, Geneva, Tahoma, sans-serif">@Resources.Resource.Ok</span>',
                                        className: 'btn-primary'
                                    }
                                }
                            });
                            document.getElementById("SearchSupplierAccountNumber").value = '';
                            document.getElementById("SearchSupplierAccountName").value = '';
                            $("#SearchSupplierAccountNumber").focus();
                        }
                        else {
                            document.getElementById("SearchSupplierAccountName").value = Data.AccountName;
                        }
                    });
                }
            }
        });
    });


</script>






